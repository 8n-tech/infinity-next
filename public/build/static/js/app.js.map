{"version":3,"sources":["main.js","widgets/autoupdater.widget.js","widgets/board-favorite.widget.js","widgets/boardlist.widget.js","widgets/captcha.widget.js","widgets/config.widget.js","widgets/content.widget.js","widgets/donate.widget.js","widgets/gnav.widget.js","widgets/instantclick.widget.js","widgets/js-config.widget.js","widgets/lazyimg.widget.js","widgets/notice.widget.js","widgets/permissions.widget.js","widgets/post.widget.js","widgets/postbox.widget.js","widgets/stylist.widget.js","widgets/time.widget.js"],"names":[],"mappingspgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjlxbhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjlhpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\n * Widget Master\n */\n(function(window, $, undefined) {\n\tvar ib = window.ib = function() {};\n\n\t// Store existing Widgets.\n\tib.widgets = {};\n\n\t// Setup directional logic\n\tib.rtl = false;\n\tib.ltr = !ib.rtl;\n\n\t// Binding Widgets to DOM.\n\tib.bindAll = function(eventOrScope) {\n\t\tvar $scope;\n\n\t\tif (typeof eventOrScope !== \"undefined\")\n\t\t{\n\t\t\tif (typeof eventOrScope.target !== \"undefined\")\n\t\t\t{\n\t\t\t\t$scope = $(eventOrScope.target);\n\t\t\t}\n\t\t\telse if (eventOrScope instanceof jQuery)\n\t\t\t{\n\t\t\t\t$scope = eventOrScope;\n\t\t\t}\n\t\t\telse if (eventOrScope instanceof HTMLElement)\n\t\t\t{\n\t\t\t\t$scope = $(eventOrScope);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$scope = $(document);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scope = $(document);\n\t\t}\n\n\t\tif ($scope instanceof jQuery)\n\t\t{\n\t\t\tif ($scope.is(\"[data-widget]\")) {\n\t\t\t\tib.bindElement($scope[0]);\n\t\t\t}\n\n\t\t\t$(\"[data-widget]\", $scope).each(function() {\n\t\t\t\tib.bindElement(this);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"ib.bindAll couldn't make sense of eventOrScope.\", eventOrScope);\n\t\t}\n\t},\n\n\tib.bindOnEvent = function(event) {\n\t\treturn ib.bindElement(this);\n\t},\n\n\tib.bindElement = function(dom) {\n\t\tvar requestedWidget = dom.getAttribute('data-widget');\n\n\t\tif (ib.widgets[requestedWidget])\n\t\t{\n\t\t\treturn ib.bindWidget(dom, ib.widgets[requestedWidget]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"Widget \\\"\"+requestedWidget+\"\\\" does not exist.\");\n\t\t}\n\t};\n\n\tib.bindWidget = function(dom, widget) {\n\t\tif (typeof dom.widget === \"undefined\")\n\t\t{\n\t\t\tdom.widget = new widget(window, jQuery);\n\t\t\tdom.widget.initOnce = false;\n\n\t\t\twidget.instances.push(dom.widget);\n\n\t\t\tif (typeof dom.widget.init === \"function\")\n\t\t\t{\n\t\t\t\tdom.widget.init(dom);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twindow.ib.widgetArguments.call(dom.widget, [dom]);\n\t\t\t}\n\n\t\t\tdom.widget.initOnce = true;\n\t\t}\n\n\t\treturn dom.widget;\n\t};\n\n\t// Handle config searching.\n\t// This is site config, not user settings.\n\tib.config = function(name, configDefault) {\n\t\tif (typeof window.app !== \"undefined\" && typeof window.app[name] !== \"undefined\")\n\t\t{\n\t\t\treturn window.app[name];\n\t\t}\n\n\t\treturn configDefault;\n\t};\n\n\t// Translate a phrase.\n\tib.trans = function(phrase) {\n\t\t// Split a 'x.y.z' string into ['x','y','z']\n\t\tvar items = phrase instanceof Array ? phrase : phrase.split(\".\");\n\t\t// Point to the application language object-array.\n\t\tvar traverse = window.app.lang;\n\n\t\t// For each item in our phrase key, traverse down.\n\t\tfor (var i = 0; i < items.length; ++i)\n\t\t{\n\t\t\ttraverse = traverse[items[i]];\n\n\t\t\t// If we've hit an undefined point, bail out with an empty string.\n\t\t\tif (traverse === undefined)\n\t\t\t{\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}\n\n\t\t// If we didn't come up with a string, bail out.\n\t\tif (typeof traverse !== \"string\")\n\t\t{\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn traverse;\n\t};\n\n\t// Determines if this device is a small portview.\n\tib.isMobile = function()\n\t{\n\t\treturn (window.innerHeight < 480 || window.innerWidth < 728)\n\t};\n\n\t// Lpad 5 into \"05\".\n\tib.lpad = function(n, width, z) {\n\t\tz = z || '0';\n\t\tn = n + '';\n\n\t\tif (n.length >= width)\n\t\t{\n\t\t\treturn n;\n\t\t}\n\n\t\treturn new Array(width - n.length + 1).join(z) + n;\n\t};\n\n\t// Generates a random string with alternating case.\n\tib.randomString = function(length) {\n\t\tlength = length || 8;\n\n\t\tvar text = \"\";\n\t\tvar possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n\t\t\t\"abcdefghijklmnopqrstuvwxyz\" +\n\t\t\t\"0123456789!@#$%^&*()\";\n\n\t\tfor (var i = 0; i < length; ++i)\n\t\t{\n\t\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t\t}\n\n\t\treturn text;\n\t};\n\n\t/**\n\t * Options and Settings\n\t */\n\tib.option = function(widget, params) {\n\t\tvar widget  = widget;\n\t\tvar name    = params.name;\n\t\tvar type    = params.type;\n\t\tvar initial = params.initial;\n\t\tvar values  = params.values;\n\n\t\tif (!this.validateWidget(widget)) {\n\t\t\tthrow \"ib.option :: widget \\\"\" + widget + \"\\\" not defined.\";\n\t\t}\n\t\tif (!this.validateName(name)) {\n\t\t\tthrow \"ib.option :: name \\\"\" + name + \"\\\" not valid.\";\n\t\t}\n\t\tif (!this.validateType(type)) {\n\t\t\tthrow \"ib.option :: type \\\"\" + type + \"\\\" not valid.\";\n\t\t}\n\n\t\tvar setting  = this;\n\t\tthis.name    = name;\n\t\tthis.initial = initial;\n\t\tthis.storage = \"ib.setting.\" + widget + \".\" + name;\n\t\tthis.type    = type;\n\t\tthis.values  = values;\n\t\tthis.widget  = widget;\n\n\t\t// Synchronize widgets on update\n\t\tthis.onUpdate(this.eventStorageUpdate);\n\t};\n\n\tib.option.prototype.eventInputChanged = function(event) {\n\t\tvar setting = event.data.setting;\n\t\tvar value;\n\n\t\tswitch (event.data.setting.type)\n\t\t{\n\t\t\tcase 'bool':\n\t\t\t\tvar checked = $(this).prop('checked');\n\t\t\t\tvalue = checked === \"on\" || checked == true ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalue = this.value;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Enforce data integrity if we have a whitelist.\n\t\tif (setting.values instanceof Array\n\t\t\t&& setting.values.indexOf(value) < 0)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn false;\n\t\t}\n\n\t\tsetting.set(value);\n\t};\n\n\tib.option.prototype.eventStorageUpdate = function(event) {\n\t\tif (event.originalEvent.key === event.data.setting.storage)\n\t\t{\n\t\t\tvar setting = event.data.setting;\n\t\t\tvar $input  = $(\"#js-config-\"+setting.widget+\"-\"+setting.name);\n\n\t\t\tswitch (setting.type)\n\t\t\t{\n\t\t\t\tcase 'bool':\n\t\t\t\t\t$input.prop('checked', setting.get() == \"1\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$input.val(setting.get());\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tib.option.prototype.get = function() {\n\t\tvar value = localStorage.getItem(this.storage);\n\n\t\tif ((typeof value === \"undefined\" || value === null) && this.initial)\n\t\t{\n\t\t\tvalue = this.initial;\n\t\t}\n\n\t\tswitch (this.type)\n\t\t{\n\t\t\tcase 'bool' :\n\t\t\t\treturn value === \"1\" || value === 1 || value === true;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t};\n\n\tib.option.prototype.getLabel = function() {\n\t\treturn ib.trans(this.widget + \".option.\" + this.name);\n\t};\n\n\tib.option.prototype.getName = function() {\n\t\treturn this.name;\n\t};\n\n\tib.option.prototype.getType = function() {\n\t\treturn this.type;\n\t};\n\n\tib.option.prototype.onUpdate = function(closure) {\n\t\tif (typeof closure !== \"function\") {\n\t\t\tthrow \"ib.option :: onUpdate not supplied a closure.\"\n\t\t}\n\n\t\t$(window).on('storage', { setting : this }, closure);\n\t};\n\n\tib.option.prototype.set = function(value) {\n\t\treturn localStorage.setItem(this.storage, value);\n\t};\n\n\tib.option.prototype.setInitial = function(overwrite) {\n\t\tvar value = localStorage.getItem(this.storage);\n\t\tvar isUndefined = (typeof value === \"undefined\" || value === null);\n\n\t\tif (overwrite === true || (isUndefined && this.initial))\n\t\t{\n\t\t\tvalue = this.initial;\n\t\t\tlocalStorage.setItem(this.storage, value);\n\t\t\tconsole.log(\"option.setInitial force writing \" + this.widget +\n\t\t\t\t\".\" + this.name + \" to \\\"\" + value + \"\\\".\");\n\t\t}\n\n\t\treturn value;\n\t};\n\n\tib.option.prototype.toHTML = function() {\n\t\tvar $html;\n\t\tvar value = this.get();\n\n\t\tswitch (this.type)\n\t\t{\n\t\t\tcase 'bool':\n\t\t\t\t$html = $(\"<input />\");\n\t\t\t\t$html.attr('type', \"checkbox\");\n\t\t\t\t$html.prop('checked', value);\n\t\t\t\tvalue = 1;\n\t\t\t\tbreak;\n\n\t\t\tcase 'int':\n\t\t\t\t$html = $(\"<input />\");\n\t\t\t\t$html.attr('type', \"number\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'select':\n\t\t\t\t$html = $(\"<select></select>\");\n\n\t\t\t\tfor (var i = 0; i < this.values.length; ++i)\n\t\t\t\t{\n\t\t\t\t\tvar option = this.values[i];\n\t\t\t\t\toption = \"<option value=\\\"\"+option+\"\\\">\"+option+\"</option>\";\n\t\t\t\t\t$html.append(option);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'text':\n\t\t\t\t$html = $(\"<input />\");\n\t\t\t\t$html.attr('type', \"text\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'textarea':\n\t\t\t\t$html = $(\"<textarea></textarea>\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t//case 'array':\n\t\t\t\t$html = $(\"<span></span>\")\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t$html.attr('id',    \"js-config-\"+this.widget+\"-\"+this.name);\n\t\t$html.attr('class', \"config-option\");\n\t\t$html.val(value);\n\t\t$html.on(\n\t\t\t'change',\n\t\t\t{ 'setting' : this },\n\t\t\tthis.eventInputChanged\n\t\t);\n\n\t\tif (typeof this.eventCustomInputChanged === \"function\")\n\t\t{\n\t\t\t$html.on(\n\t\t\t\t'change',\n\t\t\t\t{ 'setting' : this },\n\t\t\t\tthis.eventCustomInputChanged\n\t\t\t);\n\t\t}\n\n\t\treturn $html;\n\t};\n\n\tib.option.prototype.validateName = function(name) {\n\t\treturn typeof name === \"string\" && name.length > 0;\n\t};\n\n\tib.option.prototype.validateType = function(type) {\n\t\tswitch (type)\n\t\t{\n\t\t\tcase 'array'    :\n\t\t\tcase 'bool'     :\n\t\t\tcase 'int'      :\n\t\t\tcase 'select'   :\n\t\t\tcase 'string'   :\n\t\t\tcase 'text'     :\n\t\t\tcase 'textarea' :\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tib.option.prototype.validateWidget = function(widget) {\n\t\treturn typeof ib.widgets[widget] === \"function\" || widget === \"main\";\n\t};\n\n\tib.settings = {\n\t\t// 'main' : {\n\t\t// \t'widgets' : new ib.option(\"main\", 'widgets', \"bool\")\n\t\t// }\n\t};\n\n\n\t// Setup new Widget class.\n\tib.widget = function(name, widget, options) {\n\t\tconsole.log(\"Declaring widget \\\"\"+name+\"\\\".\");\n\n\t\tif (ib.widgets[name] !== undefined)\n\t\t{\n\t\t\tconsole.log(\"Trying to re-declare widget \\\"\"+name+\"\\\".\");\n\t\t\treturn false;\n\t\t}\n\n\t\twidget.instances = [];\n\t\twidget.prototype.name = name;\n\t\tib.widgets[name] = widget;\n\n\t\tif (typeof options === \"object\")\n\t\t{\n\t\t\tif (typeof ib.settings[name] === \"undefined\")\n\t\t\t{\n\t\t\t\tib.settings[name] = {};\n\t\t\t}\n\n\t\t\tjQuery.each(options, function(optionName, optionParams)\n\t\t\t{\n\t\t\t\tvar optionData = {\n\t\t\t\t\twidget : name,\n\t\t\t\t\tname : optionName,\n\t\t\t\t\ttype : null,\n\t\t\t\t\tinitial : null,\n\t\t\t\t\tonChange : null,\n\t\t\t\t\tonUpdate : null\n\t\t\t\t};\n\n\t\t\t\tif (typeof optionParams === \"object\")\n\t\t\t\t{\n\t\t\t\t\toptionData = jQuery.extend(true, optionData, optionParams);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toptionData.type = optionParams;\n\t\t\t\t}\n\n\t\t\t\t// Declare new option instance.\n\t\t\t\tvar option = new ib.option(name, optionData);\n\n\t\t\t\tib.settings[name][optionName] = option;\n\n\t\t\t\t// On HTML input change\n\t\t\t\tif (typeof optionParams.onChange === \"function\")\n\t\t\t\t{\n\t\t\t\t\toption.eventCustomInputChanged = optionParams.onChange;\n\t\t\t\t}\n\n\t\t\t\t// On option change in another tab\n\t\t\t\tif (typeof optionParams.onUpdate === \"function\")\n\t\t\t\t{\n\t\t\t\t\toption.onUpdate(optionParams.onUpdate);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t};\n\n\t// Widget blueprint for instance extension.\n\tib.blueprint = function() { };\n\n\tib.blueprint.prototype.get = function(item) {\n\t\t// Does this widget have settings?\n\t\tif (typeof ib.settings[this.name] === \"undefined\")\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Does this setting instance our option prototype?\n\t\tif (!(ib.settings[this.name][item] instanceof ib.option))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ib.settings[this.name][item].get();\n\t};\n\n\tib.blueprint.prototype.is = function(item) {\n\t\treturn !!this.get(item);\n\t};\n\n\t// This returns a non-referential copy of the blueprint for widget building.\n\tib.getBlueprint = function() {\n\t\tvar blueprint = function() { };\n\t\tblueprint.prototype = jQuery.extend(true, {}, ib.blueprint.prototype);\n\t\treturn blueprint;\n\t}\n\n\t// Returns all instances of a widget as jQuery.\n\tib.getInstances = function(widget) {\n\t\tvar instances  = ib.widgets[widget].instances;\n\t\tvar $instances = $();\n\n\t\tfor (var i = 0; i < instances.length; ++i)\n\t\t{\n\t\t\t$instances = $instances.add(instances[i].$widget);\n\t\t}\n\n\t\treturn $instances;\n\t};\n\n\t// Gets a window's selected text.\n\tib.getSelectedText = function() {\n\t\tvar text = \"\";\n\n\t\tif (window.getSelection)\n\t\t{\n\t\t\ttext = window.getSelection().toString();\n\t\t}\n\t\telse if (document.selection && document.selection.type != \"Control\") {\n\t\t\ttext = document.selection.createRange().text;\n\t\t}\n\n\t\treturn text;\n\t};\n\n\tib.widgetArguments  = function(args) {\n\t\tvar widget  = this;\n\t\tvar target  = args[0];\n\t\tvar options = args[1];\n\n\t\tif (typeof options !== \"object\")\n\t\t{\n\t\t\toptions = {};\n\t\t}\n\n\t\twidget.options = $.extend(true, options, widget.defaults);\n\n\t\tif (typeof target !== \"string\" && $(target).length === 0)\n\t\t{\n\t\t\ttarget = widget.options.selector.widget;\n\t\t}\n\n\n\t\tvar $widget = widget.$widget = $(target).first();\n\n\t\tif ($widget.length)\n\t\t{\n\t\t\tif (typeof widget.can !== \"function\" || widget.can())\n\t\t\t{\n\t\t\t\tif (typeof widget.bind === \"object\")\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\twidget.bind.widget.call(widget);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to initiate v1 widget!\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof widget.bind === \"function\")\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\twidget.bind();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.error(\"Failed to initiate v2 widget!\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (typeof widget.bind.failure === \"function\")\n\t\t\t{\n\t\t\t\twidget.bind.failure();\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t// We handle widget binding in two ways, depending on browser support.\n\tif (typeof MutationObserver === \"function\")\n\t{\n\t\t// If the newer MutationObserver object exists, we can watch the DOM\n\t\t// for new elements and bind widgets immediately as they're conceived.\n\t\tib.observeMutation = function(records) {\n\t\t\t// This method must be EXTREMELY FAST as it is called on every\n\t\t\t// dom mutation as it happens.\n\t\t\tib.bindQueued();\n\n\t\t\tfor (var x = 0; x < records.length; ++x)\n\t\t\t{\n\t\t\t\tvar nodes = records[x].addedNodes;\n\n\t\t\t\tfor (var y = 0; y < nodes.length; ++y)\n\t\t\t\t{\n\t\t\t\t\tvar node = nodes[y];\n\n\t\t\t\t\tif (node.attributes && node.attributes['data-widget'])\n\t\t\t\t\t{\n\t\t\t\t\t\tib.bindWhenLoaded(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (document.readyState !== \"loading\")\n\t\t\t{\n\t\t\t\tib.mutationObserver.disconnect();\n\t\t\t}\n\t\t};\n\n\t\t// Widgets not fully loaded are queued for binding at a later time.\n\t\tib.queuedElements = [];\n\n\t\tib.bindWhenLoaded = function(node) {\n\t\t\tif (ib.widgetLoading(node))\n\t\t\t{\n\t\t\t\tib.queuedElements.push(node);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tib.bindElement(node);\n\t\t\t}\n\t\t};\n\n\t\tib.widgetLoading = function(node) {\n\t\t\tif (document.readyState !== \"loading\")\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\twhile(!node.nextSibling && node.parentNode)\n\t\t\t{\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\n\t\t\treturn !node.nextSibling || (node.parentNode === document.body);\n\t\t};\n\n\t\tib.bindQueued = function() {\n\t\t\tvar queue = ib.queuedElements;\n\t\t\tib.queuedElements = [];\n\n\t\t\tfor (var i = 0; i < queue.length; ++i)\n\t\t\t{\n\t\t\t\tib.bindWhenLoaded(queue[i]);\n\t\t\t}\n\t\t};\n\n\t\tib.mutationObserver = new MutationObserver(ib.observeMutation);\n\t\tib.mutationObserver.observe(\n\t\t\tdocument.documentElement,\n\t\t\t{\n\t\t\t\tchildList : true,\n\t\t\t\tsubtree : true\n\t\t\t}\n\t\t);\n\t\t$(document).on('ready', ib.bindQueued);\n\t}\n\telse\n\t{\n\t\t// Otherwise, we must use jQuery after the document has loaded.\n\t\t$(document).on('ready', ib.bindAll);\n\t}\n\n\treturn ib;\n})(window, jQuery);\n","// ===========================================================================\n// Purpose          : Posts\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n\t// Widget blueprint\n\tvar blueprint = ib.getBlueprint();\n\n\tvar options = {};\n\n\tblueprint.prototype.defaults = {\n\t\t// Important class names.\n\t\tclassname : {\n\t\t\t'last-reply' : \"thread-last-reply\"\n\t\t},\n\n\t\t// Selectors for finding and binding elements.\n\t\tselector : {\n\t\t\t'enabled'        : \".autoupdater-enabled\",\n\t\t\t'timer'          : \".autoupdater-timer\",\n\t\t\t'force-update'   : \".autoupdater-update\",\n\t\t\t'updating'       : \".autoupdater-updating\",\n\n\t\t\t'cite'           : \"a.cite-post\",\n\n\t\t\t'thread-event-target' : \".thread:first\",\n\t\t\t'thread-reply'        : \".thread-reply\"\n\t\t},\n\t},\n\n\t// Update tracking\n\tblueprint.prototype.updating     = false;\n\tblueprint.prototype.updateTimer  = false;\n\tblueprint.prototype.updateURL    = false;\n\tblueprint.prototype.updateAsked  = false;\n\tblueprint.prototype.updateLast   = false;\n\tblueprint.prototype.updateMisses = 0;\n\n\t// Keeps track of what our last post was before we focused the window.\n\tblueprint.prototype.$lastPost    = null;\n\tblueprint.prototype.hasFocus     = false;\n\tblueprint.prototype.newReplies   = 0;\n\n\t// Keeps track of if we're scrolled to the bottom.\n\tblueprint.prototype.scrollLocked = false;\n\n\t// Returns the UNIX timestamp of our last received post.\n\tblueprint.prototype.getTimeFromPost = function($post) {\n\t\tvar $container = $post;\n\n\t\tif (!$container.is(\".post-container\"))\n\t\t{\n\t\t\t$container = $post.find(\".post-container:first\");\n\t\t}\n\n\t\tif (!$container.length)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\n\t\tvar times = [0];\n\n\t\tif ($container.is(\"[data-created-at]\"))\n\t\t{\n\t\t\tvar createdAt = parseInt($container.attr('data-created-at'), 10);\n\n\t\t\tif (!isNaN(createdAt))\n\t\t\t{\n\t\t\t\ttimes.push(createdAt);\n\t\t\t}\n\t\t}\n\n\t\tif ($container.is(\"[data-deleted-at]\"))\n\t\t{\n\t\t\tvar deletedAt = parseInt($container.attr('data-deleted-at'), 10);\n\n\t\t\tif (!isNaN(deletedAt))\n\t\t\t{\n\t\t\t\ttimes.push(deletedAt);\n\t\t\t}\n\t\t}\n\n\t\tif ($container.is(\"[data-updated-at]\"))\n\t\t{\n\t\t\tvar updatedAt = parseInt($container.attr('data-updated-at'), 10);\n\n\t\t\tif (!isNaN(updatedAt))\n\t\t\t{\n\t\t\t\ttimes.push(updatedAt);\n\t\t\t}\n\t\t}\n\n\t\treturn Math.max.apply(Math, times);\n\t};\n\n\tblueprint.prototype.addYouPost = function(uri, id) {\n\t\tif (typeof window.localStorage !== \"object\")\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tvar storage = localStorage.getItem(\"yourPosts.\"+uri).split(\",\");\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar storage = [];\n\t\t}\n\n\t\tstorage.push(id);\n\t\tstorage = storage.filter(function(index, item, array) {\n\t\t\treturn array.lastIndexOf(index) === item;\n\t\t});\n\n\t\tlocalStorage.setItem(\"yourPosts.\"+uri, storage.join(\",\"));\n\t};\n\n\tblueprint.prototype.bind = function() {\n\t\tvar widget  = this;\n\t\tvar $widget = this.$widget;\n\t\tvar data    = {\n\t\t\twidget  : widget,\n\t\t\t$widget : $widget\n\t\t};\n\n\t\t$(widget.options.selector['force-update'])\n\t\t\t.show();\n\n\t\t$(widget.options.selector['updating'])\n\t\t\t.hide();\n\n\t\t$(window)\n\t\t\t.on(\n\t\t\t\t'scroll.ib-au',\n\t\t\t\tdata,\n\t\t\t\twidget.events.windowScroll\n\t\t\t)\n\t\t\t.on(\n\t\t\t\t'focus.ib-au',\n\t\t\t\tdata,\n\t\t\t\twidget.events.windowFocus\n\t\t\t)\n\t\t\t.on(\n\t\t\t\t'blur.ib-au',\n\t\t\t\tdata,\n\t\t\t\twidget.events.windowUnfocus\n\t\t\t)\n\t\t;\n\n\t\t$widget\n\t\t\t.on(\n\t\t\t\t'click.ib-au',\n\t\t\t\twidget.options.selector['force-update'],\n\t\t\t\tdata,\n\t\t\t\twidget.events.updaterUpdateClick\n\t\t\t)\n\t\t\t.on(\n\t\t\t\t'au-update.ib-au',\n\t\t\t\tdata,\n\t\t\t\twidget.events.update\n\t\t\t)\n\t\t;\n\n\t\twidget.bindTimer();\n\t};\n\n\tblueprint.prototype.bindTimer = function() {\n\t\tvar widget       = this;\n\t\tvar $widget      = this.$widget;\n\t\tvar $lastReply   = $widget.prev();\n\t\twidget.$lastPost = $lastReply;\n\n\t\tif (!$lastReply.length)\n\t\t{\n\t\t\t// Select OP if we have no replies.\n\t\t\t$lastReply = $widget.parents( widget.options.selector['thread-event-target'] );\n\n\t\t\t// We don't want OP to be our last post.\n\t\t\twidget.$lastPost = null;\n\t\t}\n\n\t\twidget.updateLast = widget.getTimeFromPost($lastReply);\n\t\twidget.hasFocus   = document.hasFocus();\n\n\t\tvar url   = $widget.data('url');\n\n\t\tif (url)\n\t\t{\n\t\t\twidget.updateURL = url;\n\t\t\twidget.$widget.show();\n\n\t\t\tclearInterval(widget.updateTimer);\n\t\t\twidget.updateTimer = setInterval(function() {\n\t\t\t\twidget.updateInterval.apply(widget);\n\t\t\t}, 1000);\n\t\t}\n\t};\n\n\t// Events\n\tblueprint.prototype.events = {\n\t\tupdate : function(event) {\n\t\t\t// Calls the widget's update function with a contextual this.\n\t\t\tevent.data.widget.update.call(event.data.widget);\n\t\t},\n\n\t\tupdateComplete : function(json, textStatus, jqXHR) {\n\t\t\tvar widget = jqXHR.widget;\n\n\t\t\twidget.updating = false;\n\n\t\t\t$(widget.options.selector['force-update'])\n\t\t\t\t.show();\n\t\t\t$(widget.options.selector['updating'])\n\t\t\t\t.hide();\n\n\t\t\tclearInterval(widget.updateTimer);\n\t\t\twidget.updateTimer = setInterval(function() {\n\t\t\t\twidget.updateInterval.apply(widget);\n\t\t\t}, 1000);\n\t\t},\n\n\t\tupdateSuccess : function(json, textStatus, jqXHR, scrollIntoView) {\n\t\t\tvar widget       = jqXHR.widget;\n\t\t\tvar $widget      = widget.$widget;\n\t\t\tvar newPosts     = $();\n\t\t\tvar updatedPosts = $();\n\t\t\tvar deletedPosts = $();\n\t\t\tvar postData     = json;\n\n\t\t\t// This important event fire ensures that sibling data is intercepted.\n\t\t\tif (json.messenger)\n\t\t\t{\n\t\t\t\tpostData = json.data;\n\t\t\t\t$(window).trigger('messenger', json);\n\t\t\t}\n\n\t\t\tif (postData instanceof Array)\n\t\t\t{\n\t\t\t\t$.each(postData, function(index, reply)\n\t\t\t\t{\n\t\t\t\t\tvar $existingPost = $(\".post-container[data-post_id=\" + reply.post_id+\"]\");\n\n\t\t\t\t\tif ($existingPost.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (reply.html !== null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$newPost      = $(reply.html);\n\n\t\t\t\t\t\t\tvar existingUpdated = parseInt($existingPost.attr('data-updated-at'), 10),\n\t\t\t\t\t\t\t\tnewUpdated      = parseInt($newPost.attr('data-updated-at'), 10);\n\n\t\t\t\t\t\t\tif (isNaN(existingUpdated) || isNaN(newUpdated) || (newUpdated > existingUpdated))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(\"Autoupdater: Replacing \" + reply.post_id);\n\n\t\t\t\t\t\t\t\t$existingPost.replaceWith($newPost);\n\t\t\t\t\t\t\t\tib.bindAll($newPost[0]);\n\n\t\t\t\t\t\t\t\tupdatedPosts.push($newPost);\n\n\t\t\t\t\t\t\t\twidget.updateLast = Math.max(widget.updateLast, widget.getTimeFromPost($newPost));\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"Autoupdater: Deleting \" + reply.post_id);\n\n\t\t\t\t\t\t\t$existingPost.addClass('post-deleted');\n\n\t\t\t\t\t\t\tupdatedPosts.push($existingPost);\n\t\t\t\t\t\t\tdeletedPosts.push($existingPost);\n\n\t\t\t\t\t\t\twidget.updateLast = Math.max(widget.updateLast, widget.getTimeFromPost($existingPost));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (reply.html !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Autoupdater: Inserting \" + reply.post_id);\n\n\t\t\t\t\t\t$newPost = $(reply.html);\n\n\t\t\t\t\t\tvar $li = $(\"<li class=\\\"thread-reply\\\"></li>\");\n\t\t\t\t\t\tvar $article = $(\"<article class=\\\"reply\\\"></article>\");\n\n\t\t\t\t\t\t// Insertion has to be done very carefully so we have a\n\t\t\t\t\t\t// valid reference for $newPost.\n\t\t\t\t\t\t$article.append($newPost);\n\t\t\t\t\t\t$li.append($article);\n\t\t\t\t\t\t$li.insertBefore($widget);\n\n\t\t\t\t\t\twidget.updateLast = Math.max(widget.updateLast, widget.getTimeFromPost($newPost));\n\n\t\t\t\t\t\t// Push this ID into our You lists if we made it.\n\t\t\t\t\t\tif (reply.recently_created)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidget.addYouPost(reply.board_uri, reply.board_id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Used primarily by postbox updates to force the scroll to see our new post.\n\t\t\t\t\t\tif (scrollIntoView === true)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (typeof $newPost[0].scrollIntoViewIfNeeded !== \"undefined\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$newPost[0].scrollIntoViewIfNeeded({\n\t\t\t\t\t\t\t\t\tbehavior : \"smooth\",\n\t\t\t\t\t\t\t\t\tblock    : \"end\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (typeof $newPost[0].scrollIntoView !== \"undefined\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$newPost[0].scrollIntoView({\n\t\t\t\t\t\t\t\t\tbehavior : \"smooth\",\n\t\t\t\t\t\t\t\t\tblock    : \"end\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tib.bindAll($newPost);\n\t\t\t\t\t\tnewPosts.push($newPost);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (newPosts.length)\n\t\t\t{\n\t\t\t\tif (!widget.hasFocus)\n\t\t\t\t{\n\t\t\t\t\twidget.newReplies += newPosts.length;\n\t\t\t\t}\n\t\t\t\telse if (widget.scrollLocked)\n\t\t\t\t{\n\t\t\t\t\twindow.scrollTo(0, document.body.scrollHeight);\n\t\t\t\t}\n\n\t\t\t\twidget.updateMisses = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++widget.updateMisses;\n\t\t\t}\n\n\t\t\t$(window).trigger('au-updated', [{\n\t\t\t\t'newPosts'     : newPosts,\n\t\t\t\t'updatedPosts' : updatedPosts,\n\t\t\t\t'deletedPosts' : deletedPosts,\n\t\t\t}]);\n\n\t\t\twidget.updateLastReply();\n\n\t\t\treturn false;\n\t\t},\n\n\t\tupdaterUpdateClick : function(event) {\n\t\t\tvar widget  = event.data.widget;\n\t\t\tvar $widget = event.data.$widget;\n\t\t\tvar $timer  = $(widget.options.selector['timer'], $widget);\n\n\t\t\twidget.updateMisses = 0;\n\t\t\t$timer.attr('data-time', 5);\n\t\t\twidget.update();\n\n\t\t\tevent.preventDefault();\n\t\t\treturn false;\n\t\t},\n\n\t\twindowFocus : function(event) {\n\t\t\tvar widget  = event.data.widget;\n\t\t\tvar $widget = event.data.$widget;\n\n\t\t\twidget.hasFocus   = true;\n\t\t\twidget.$lastPost  = null;\n\t\t\twidget.newReplies = 0;\n\n\t\t\tdocument.title = $('<div/>').html(window.app.title).text();\n\t\t\t$(\"#favicon\").attr('href', window.app.favicon.normal);\n\t\t},\n\n\t\twindowUnfocus : function(event) {\n\t\t\tvar widget  = event.data.widget;\n\t\t\tvar $widget = event.data.$widget;\n\n\t\t\t// Sets our last seen post to the post immediately above the widget.\n\t\t\twidget.$lastPost    = widget.$widget.prev();\n\t\t\twidget.$lastPost    = widget.$lastPost.length ? widget.$lastPost : null;\n\t\t\twidget.hasFocus     = false;\n\t\t\twidget.scrollLocked = false;\n\t\t},\n\n\t\twindowScroll : function(event) {\n\t\t\tvar widget  = event.data.widget;\n\t\t\tvar $widget = event.data.$widget;\n\t\t\tvar $window = $(window);\n\n\t\t\t// Determine if the boundaries of this image are in the viewport.\n\n\t\t\tvar docViewTop    = $window.scrollTop();\n\t\t\tvar docViewBottom = docViewTop + $window.height();\n\n\t\t\tvar viewPad = 16;\n\n\t\t\tvar elemTop       = $widget.offset().top - viewPad;\n\t\t\tvar elemBottom    = elemTop + $widget.height() + viewPad;\n\n\t\t\t// We don't need the entire image to be present, just either edge.\n\n\t\t\t// If the top boundary is present\n\t\t\twidget.scrollLocked = (elemBottom <= docViewBottom) && (elemBottom >= docViewTop);\n\t\t}\n\t};\n\n\t// Main update trigger.\n\tblueprint.prototype.update = function() {\n\t\tvar widget  = this;\n\t\tvar $widget = this.widget;\n\n\t\tif (!widget.updating)\n\t\t{\n\t\t\t$(widget.options.selector['force-update'])\n\t\t\t\t.hide();\n\n\t\t\t$(widget.options.selector['updating'])\n\t\t\t\t.show();\n\n\t\t\tclearInterval(widget.updateTimer);\n\n\t\t\tvar jqXHR = $.ajax(widget.updateURL, {\n\t\t\t\tdata : {\n\t\t\t\t\t'updatesOnly'  : 1,\n\t\t\t\t\t'updateHtml'   : 1,\n\t\t\t\t\t'updatedSince' : widget.updateLast,\n\t\t\t\t\t'messenger'    : 1\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tjqXHR.widget = widget;\n\t\t\tjqXHR.done(widget.events.updateSuccess)\n\t\t\tjqXHR.always(widget.events.updateComplete);\n\n\t\t\twidget.updating    = true;\n\t\t\twidget.updateTimer = false;\n\t\t\twidget.updateAsked = parseInt(parseInt(Date.now(), 10) / 1000, 10);\n\t\t}\n\t};\n\n\tblueprint.prototype.updateInterval = function() {\n\t\tvar widget  = this;\n\t\tvar $widget = this.$widget;\n\t\tclearInterval(widget.updateTimer);\n\n\t\tif ($(widget.options.selector['enabled']).is(\":checked\"))\n\t\t{\n\t\t\tvar $timer = $(widget.options.selector['timer'], widget.$widget);\n\t\t\tvar time   = parseInt($timer.attr('data-time'), 10);\n\n\t\t\tif (isNaN(time))\n\t\t\t{\n\t\t\t\ttime = 0;\n\t\t\t}\n\n\t\t\t--time;\n\n\t\t\tif (time <= 0)\n\t\t\t{\n\t\t\t\ttime = (widget.hasFocus ? widget.updateMisses * 2 : Math.pow(widget.updateMisses, 1.5)) + 3;\n\t\t\t\ttime = parseInt( Math.min(time, 30), 10);\n\n\t\t\t\t$widget.trigger('au-update');\n\t\t\t}\n\n\t\t\t$timer\n\t\t\t\t.text(time+'s')\n\t\t\t\t.attr('data-time', time);\n\t\t}\n\n\t\twidget.updateTimer = setInterval(function() {\n\t\t\twidget.updateInterval.apply(widget);\n\t\t}, 1000);\n\t};\n\n\tblueprint.prototype.updateLastReply = function() {\n\t\tvar widget  = this;\n\t\tvar $widget = this.$widget;\n\n\t\t// This corrects which post has the last reply class.\n\t\tif (widget.$lastPost !== null)\n\t\t{\n\t\t\twidget.$widget\n\t\t\t\t.siblings(\".\" + widget.options.classname['last-reply'])\n\t\t\t\t.removeClass(widget.options.classname['last-reply']);\n\n\t\t\t// If we have replies after this, add the border.\n\t\t\tif (widget.$lastPost.next(widget.options.selector['thread-reply']).length)\n\t\t\t{\n\t\t\t\twidget.$lastPost\n\t\t\t\t\t.addClass(widget.options.classname['last-reply']);\n\t\t\t}\n\t\t}\n\n\t\t// This corrects our favicon.\n\t\tif (widget.newReplies > 0)\n\t\t{\n\t\t\t$(\"#favicon\").attr('href', window.app.favicon.alert);\n\t\t\tdocument.title = \"(\" + widget.newReplies + \") \" + $('<div/>').html(window.app.title).text();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$(\"#favicon\").attr('href', window.app.favicon.normal);\n\t\t\tdocument.title = $('<div/>').html(window.app.title).text();\n\t\t}\n\t};\n\n\tib.widget(\"autoupdater\", blueprint, options);\n})(window, window.jQuery);\n","// ============================================================\n// Purpose                      : Board Favorites\n// Contributors                 : jaw-sh\n// ============================================================\n\nib.widget(\"board-favorite\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\tcan :  function() {\n\t\t\tvar ls    = typeof localStorage === \"object\";\n\t\t\tvar board = widget.$widget.attr('data-board');\n\t\t\t\n\t\t\treturn ls && board;\n\t\t},\n\t\t\n\t\tfavorites : function() {\n\t\t\tvar storageItem = localStorage.getItem(widget.options.storage.favorites);\n\t\t\t\n\t\t\tif (typeof storageItem === \"string\")\n\t\t\t{\n\t\t\t\treturn storageItem.split(\",\");\n\t\t\t}\n\t\t\t\n\t\t\treturn [];\n\t\t},\n\t\t\n\t\tfavoriteThis : function( addFavorite ) {\n\t\t\tvar boards = widget.favorites();\n\t\t\t\n\t\t\tif (addFavorite)\n\t\t\t{\n\t\t\t\tboards.push(widget.board);\n\t\t\t\tboards = jQuery.unique(boards);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tboards = jQuery.grep(boards, function(value) {\n\t\t\t\t\treturn value != widget.board;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tlocalStorage.setItem(widget.options.storage.favorites, boards);\n\t\t},\n\t\t\n\t\tdefaults : {\n\t\t\tclassname : {\n\t\t\t\t'favorited' : \"board-favorited\"\n\t\t\t},\n\t\t\t\n\t\t\tstorage   : {\n\t\t\t\t'favorites'      : \"ib.favorites\",\n\t\t\t\t'favorites-data' : \"ib.favoritedata\"\n\t\t\t},\n\t\t\t\n\t\t\tselector  : {\n\t\t\t\t'favorites-menu' : \"#favorite-boards\"\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Events\n\t\tevents   : {\n\t\t\t\n\t\t\tfavoriteChange : function(event) {\n\t\t\t\tvar favorites = widget.favorites();\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < favorites.length; ++i)\n\t\t\t\t{\n\t\t\t\t\tif (widget.board == favorites[i])\n\t\t\t\t\t{\n\t\t\t\t\t\twidget.$widget.addClass(widget.options.classname.favorited);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twidget.$widget.removeClass(widget.options.classname.favorited);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\n\t\t\tfavoriteClick : function(event) {\n\t\t\t\twidget.favoriteThis( !widget.$widget.hasClass(widget.options.classname.favorited) );\n\t\t\t\twidget.events.favoriteChange.call(this, event);\n\t\t\t\twidget.events.favoriteUpdate.call(this, event);\n\t\t\t},\n\t\t\t\n\t\t\tfavoriteUpdate : function(event) {\n\t\t\t\t$.get(window.app.url+\"/board-details.json\", {\n\t\t\t\t\t'boards' : widget.favorites()\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\n\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\twidget.options.storage['favorites-data'],\n\t\t\t\t\t\tJSON.stringify(response)\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\t$(widget.options.selector['favorites-menu'])\n\t\t\t\t\t\t.trigger('build');\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// This is an HTML localStorage event.\n\t\t\t// it only fires if ANOTHER WINDOW trips the change.\n\t\t\tstorage : function(event) {\n\t\t\t\tif (event.originalEvent.key == widget.options.storage.favorites)\n\t\t\t\t{\n\t\t\t\t\twidget.events.favoriteChange();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t},\n\t\t\n\t\t// Event bindings\n\t\tbind     : {\n\t\t\tfailure : function() {\n\t\t\t\twidget.$widget.hide();\n\t\t\t},\n\t\t\t\n\t\t\twidget  : function() {\n\t\t\t\twidget.board = widget.$widget.attr('data-board');\n\t\t\t\t\n\t\t\t\twidget.$widget\n\t\t\t\t\t.css('display', 'inline-block')\n\t\t\t\t\t.on( 'click.ib-board-favorite', widget.events.favoriteClick )\n\t\t\t\t;\n\t\t\t\t\n\t\t\t\t$(window)\n\t\t\t\t\t.on( 'storage.ib-board-favorite', widget.events.storage )\n\t\t\t\t;\n\t\t\t\t\n\t\t\t\twidget.events.favoriteChange();\n\t\t\t}\n\t\t}\n\t\t\n\t};\n\t\n\treturn widget;\n});\n\n","// ============================================================\n// Purpose                      : Board directory handling\n// Contributors                 : jaw-sh\n// ============================================================\n\nib.widget(\"boardlist\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\t// The default values that are set behind init values.\n\t\tdefaults : {\n\t\t\t\n\t\t\tsearchUrl  : \"/boards.html\",\n\t\t\t\n\t\t\t// Selectors for finding and binding elements.\n\t\t\tselector   : {\n\t\t\t\t'board-head'    : \".board-list-head\",\n\t\t\t\t'board-body'    : \".board-list-tbody\",\n\t\t\t\t'board-loading' : \".board-list-loading\",\n\t\t\t\t'board-omitted' : \".board-list-omitted\",\n\t\t\t\t\n\t\t\t\t'search'        : \"#search-form\",\n\t\t\t\t'search-lang'   : \"#search-lang-input\",\n\t\t\t\t'search-sfw'    : \"#search-sfw-input\",\n\t\t\t\t'search-tag'    : \"#search-tag-input\",\n\t\t\t\t'search-title'  : \"#search-title-input\",\n\t\t\t\t'search-submit' : \"#search-submit\",\n\t\t\t\t\n\t\t\t\t'tag-list'      : \".tag-list\",\n\t\t\t\t'tag-link'      : \".tag-link\",\n\t\t\t\t\n\t\t\t\t'sortable'      : \"th.sortable\",\n\t\t\t\t\n\t\t\t\t'footer-page'   : \".board-page-num\",\n\t\t\t\t'footer-count'  : \".board-page-count\",\n\t\t\t\t'footer-total'  : \".board-page-total\",\n\t\t\t\t'footer-more'   : \"#board-list-more\"\n\t\t\t},\n\t\t\t\n\t\t\t// HTML Templates for dynamic construction\n\t\t\ttemplates   : {\n\t\t\t\t// Board row item\n\t\t\t\t'board-row'          : \"<tr></tr>\",\n\t\t\t\t\n\t\t\t\t// Individual cell definitions\n\t\t\t\t'board-cell-meta'    : \"<td class=\\\"board-meta\\\"></td>\",\n\t\t\t\t'board-cell-uri'     : \"<td class=\\\"board-uri\\\"></td>\",\n\t\t\t\t'board-cell-title'   : \"<td class=\\\"board-title\\\"></td>\",\n\t\t\t\t'board-cell-stats_pph'          : \"<td class=\\\"board-pph\\\"></td>\",\n\t\t\t\t'board-cell-stats_ppd'          : \"<td class=\\\"board-ppd\\\"></td>\",\n\t\t\t\t'board-cell-stats_plh'          : \"<td class=\\\"board-plh\\\"></td>\",\n\t\t\t\t'board-cell-stats_active_users' : \"<td class=\\\"board-unique\\\"></td>\",\n\t\t\t\t'board-cell-posts_total'        : \"<td class=\\\"board-max\\\"></td>\",\n\t\t\t\t'board-cell-active'  : \"<td class=\\\"board-unique\\\"></td>\",\n\t\t\t\t'board-cell-tags'    : \"<td class=\\\"board-tags\\\"></td>\",\n\t\t\t\t\n\t\t\t\t// Content wrapper\n\t\t\t\t// Used to help constrain contents to their <td>.\n\t\t\t\t'board-content-wrap' : \"<p class=\\\"board-cell\\\"></p>\",\n\t\t\t\t\n\t\t\t\t// Individual items or parts of a single table cell.\n\t\t\t\t'board-datum-fav'    : \"<i class=\\\"board-favorite fa fa-star\\\" data-widget=\\\"board-favorite\\\"></i>\",\n\t\t\t\t'board-datum-lang'   : \"<span class=\\\"board-lang\\\"></span>\",\n\t\t\t\t'board-datum-uri'    : \"<a class=\\\"board-link\\\"></a>\",\n\t\t\t\t'board-datum-sfw'    : \"<i class=\\\"fa fa-briefcase board-sfw\\\" title=\\\"SFW\\\"></i>\",\n\t\t\t\t'board-datum-nsfw'   : \"<i class=\\\"fa fa-briefcase board-nsfw\\\" title=\\\"NSFW\\\"></i>\",\n\t\t\t\t'board-datum-tags'   : \"<a class=\\\"tag-link\\\" href=\\\"#\\\"></a>\",\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// Tag list.\n\t\t\t\t'tag-list'           : \"<ul class=\\\"tag-list\\\"></ul>\",\n\t\t\t\t'tag-item'           : \"<li class=\\\"tag-item\\\"></li>\",\n\t\t\t\t'tag-link'           : \"<a class=\\\"tag-link\\\" href=\\\"#\\\"></a>\"\n\t\t\t}\n\t\t},\n\t\t\n\t\tlastSearch : {},\n\t\t\n\t\tbind : {\n\t\t\tform : function() {\n\t\t\t\tvar selectors = widget.options.selector;\n\t\t\t\t\n\t\t\t\tvar $search       = $( selectors['search'] );\n\t\t\t\tvar $searchLang   = $( selectors['search-lang'] );\n\t\t\t\tvar $searchSfw    = $( selectors['search-sfw'] );\n\t\t\t\tvar $searchTag    = $( selectors['search-tag'] );\n\t\t\t\tvar $searchTitle  = $( selectors['search-title'] );\n\t\t\t\tvar $searchSubmit = $( selectors['search-submit'] );\n\t\t\t\t\n\t\t\t\tvar searchForms   = {\n\t\t\t\t\t\t'boardlist'    : widget.$widget,\n\t\t\t\t\t\t'search'       : $search,\n\t\t\t\t\t\t'searchLang'   : $searchLang,\n\t\t\t\t\t\t'searchSfw'    : $searchSfw,\n\t\t\t\t\t\t'searchTag'    : $searchTag,\n\t\t\t\t\t\t'searchTitle'  : $searchTitle,\n\t\t\t\t\t\t'searchSubmit' : $searchSubmit\n\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif ($search.length > 0)\n\t\t\t\t{\n\t\t\t\t\t// Bind form events.\n\t\t\t\t\twidget.$widget\n\t\t\t\t\t\t// Sort column\n\t\t\t\t\t\t.on( 'click',  selectors['sortable'], searchForms, widget.events.sortClick )\n\t\t\t\t\t\t// Load more\n\t\t\t\t\t\t.on( 'click',  selectors['board-omitted'], searchForms, widget.events.loadMore )\n\t\t\t\t\t\t// Tag click\n\t\t\t\t\t\t.on( 'click',  selectors['tag-link'], searchForms, widget.events.tagClick )\n\t\t\t\t\t\t// Form Submission\n\t\t\t\t\t\t.on( 'submit', selectors['search'], searchForms, widget.events.searchSubmit )\n\t\t\t\t\t\t// Submit click\n\t\t\t\t\t\t.on( 'click',  selectors['search-submit'], searchForms, widget.events.searchSubmit );\n\t\t\t\t\t\n\t\t\t\t\t$(window)\n\t\t\t\t\t\t.on( 'hashchange', searchForms, widget.events.hashChange );\n\t\t\t\t\t\n\t\t\t\t\t$searchSubmit.prop( 'disabled', false );\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\twidget : function() {\n\t\t\t\t\n\t\t\t\t// Parse ?GET parameters into lastSearch object.\n\t\t\t\tif (window.location.search != \"\" && window.location.search.length > 0)\n\t\t\t\t{\n\t\t\t\t\t// ?a=1&b=2 -> a=1&b=2 -> { a : 1, b : 2 }\n\t\t\t\t\twindow.location.search.substr(1).split(\"&\").forEach( function(item) {\n\t\t\t\t\t\twidget.lastSearch[item.split(\"=\")[0]] = item.split(\"=\")[1];\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$( widget.options.selector['board-loading'], widget.$widget ).hide();\n\t\t\t\t\n\t\t\t\twidget.bind.form();\n\t\t\t\t\n\t\t\t\tif (window.location.hash != \"\")\n\t\t\t\t{\n\t\t\t\t\t$(window).trigger( 'hashchange' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tbuild  : {\n\t\t\tboardlist : function(data) {\n\t\t\t\twidget.build.boards(data['boards']);\n\t\t\t\twidget.build.lastSearch(data['search']);\n\t\t\t\twidget.build.footer(data);\n\t\t\t\twidget.build.tags(data['tagWeight']);\n\t\t\t},\n\t\t\t\n\t\t\tboards : function(boards) {\n\t\t\t\t// Find our head, columns, and body.\n\t\t\t\tvar $head = $( widget.options.selector['board-head'], widget.$widget );\n\t\t\t\tvar $cols = $(\"[data-column]\", $head );\n\t\t\t\tvar $body = $( widget.options.selector['board-body'], widget.$widget );\n\t\t\t\t\n\t\t\t\t$.each( boards, function( index, board ) {\n\t\t\t\t\tvar row  = board;\n\t\t\t\t\tvar $row = $( widget.options.templates['board-row'] );\n\t\t\t\t\t\n\t\t\t\t\t$cols.each( function( index, col ) {\n\t\t\t\t\t\twidget.build.board( row, col ).appendTo( $row );\n\t\t\t\t\t} );\n\t\t\t\t\t\n\t\t\t\t\tib.bindAll( $row.appendTo( $body ) );\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tboard : function(row, col) {\n\t\t\t\tvar $col   = $(col);\n\t\t\t\tvar column = $col.attr('data-column');\n\t\t\t\tvar value  = row[column];\n\t\t\t\tvar $cell  = $( widget.options.templates['board-cell-' + column] );\n\t\t\t\tvar $wrap  = $( widget.options.templates['board-content-wrap'] );\n\t\t\t\t\n\t\t\t\tif (typeof widget.build.boardcell[column] === \"undefined\")\n\t\t\t\t{\n\t\t\t\t\tif (value instanceof Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (typeof widget.options.templates['board-datum-' + column] !== \"undefined\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$.each( value, function( index, singleValue )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$( widget.options.templates['board-datum-' + column] )\n\t\t\t\t\t\t\t\t\t.text( singleValue )\n\t\t\t\t\t\t\t\t\t.appendTo( $wrap );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$wrap.text( value.join(\" \") );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$wrap.text( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar $content = widget.build.boardcell[column]( row, value );\n\t\t\t\t\t\n\t\t\t\t\tif ($content instanceof jQuery)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($content.is(\".\" + $wrap[0].class)) {\n\t\t\t\t\t\t\t// Our new content has the same classes as the wrapper.\n\t\t\t\t\t\t\t// Replace the old wrapper.\n\t\t\t\t\t\t\t$wrap = $content;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We use .append() instead of .appendTo() as we do elsewhere\n\t\t\t\t\t\t\t// because $content can be multiple elements.\n\t\t\t\t\t\t\t$wrap.append( $content );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof $content === \"string\")\n\t\t\t\t\t{\n\t\t\t\t\t\t$wrap.html( $content );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Special cell constructor returned a \" + (typeof $content) + \" that board-directory.js cannot interpret.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$wrap.appendTo( $cell );\n\t\t\t\treturn $cell;\n\t\t\t},\n\t\t\t\n\t\t\tboardcell : {\n\t\t\t\t'meta' : function(row, value) {\n\t\t\t\t\treturn $( widget.options.templates['board-datum-lang'] ).text( row['locale'] );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t'uri'  : function(row, value) {\n\t\t\t\t\tvar $fav  = $( widget.options.templates['board-datum-fav'] );\n\t\t\t\t\tvar $link = $( widget.options.templates['board-datum-uri'] );\n\t\t\t\t\tvar $sfw  = $( widget.options.templates['board-datum-' + (row['is_worksafe'] == 1 ? \"sfw\" : \"nsfw\")] );\n\t\t\t\t\t\n\t\t\t\t\t$fav\n\t\t\t\t\t\t.attr( 'data-board', row['board_uri'] );\n\t\t\t\t\t\n\t\t\t\t\t$link\n\t\t\t\t\t\t.attr( 'href', window.app.url + \"/\" + row['board_uri'] + \"/\" )\n\t\t\t\t\t\t.text( \"/\"+row['board_uri']+\"/\" );\n\t\t\t\t\t\n\t\t\t\t\t// I decided against NSFW icons because it clutters the index.\n\t\t\t\t\t// Blue briefcase = SFW. No briefcase = NSFW. Seems better.\n\t\t\t\t\treturn $fav[0].outerHTML + $link[0].outerHTML + (row['is_worksafe'] == 1 ? $sfw[0].outerHTML : \"\");\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t'active' : function(row, value) {\n\t\t\t\t\treturn $( widget.options.templates['board-datum-pph'] )\n\t\t\t\t\t\t.attr( 'title', function(index, value) {\n\t\t\t\t\t\t\treturn value.replace(\"%1\", row['stats_pph']).replace(\"%2\", row['pph_average']);\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.text( row['stats_pph'] );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t'tags'  : function(row, value) {\n\t\t\t\t\tvar $datum = $( widget.options.templates['board-datum-tags'] )\n\t\t\t\t\t\n\t\t\t\t\t$.each( value, function( index, singleValue )\n\t\t\t\t\t{\n\t\t\t\t\t\t$( widget.options.templates['board-datum-tags'] )\n\t\t\t\t\t\t\t.text( singleValue.tag )\n\t\t\t\t\t\t\t.appendTo( $datum );\n\t\t\t\t\t} );\n\t\t\t\t\t\n\t\t\t\t\treturn $datum;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tlastSearch : function(search) {\n\t\t\t\t\n\t\t\t\treturn widget.lastSearch = { \n\t\t\t\t\t'lang'  : search.lang === false ? \"\" : search.lang,\n\t\t\t\t\t'page'  : search.page,\n\t\t\t\t\t'tags'  : search.tags === false ? \"\" : search.tags.join(\" \"),\n\t\t\t\t\t'time'  : search.time,\n\t\t\t\t\t'title' : search.title === false ? \"\" : search.title,\n\t\t\t\t\t'sfw'   : search.sfw ? 1 : 0,\n\t\t\t\t\t\n\t\t\t\t\t'sort'   : search.sort ? search.sort : null,\n\t\t\t\t\t'sortBy' : search.sortBy == \"asc\" ? \"asc\" : \"desc\"\n\t\t\t\t};\n\t\t\t},\n\t\t\t\n\t\t\tfooter : function(data) {\n\t\t\t\tvar selector = widget.options.selector;\n\t\t\t\tvar $page    = $( selector['footer-page'], widget.$widget );\n\t\t\t\tvar $count   = $( selector['footer-count'], widget.$widget );\n\t\t\t\tvar $total   = $( selector['footer-total'], widget.$widget );\n\t\t\t\tvar $more    = $( selector['footer-more'], widget.$widget );\n\t\t\t\tvar $omitted = $( selector['board-omitted'], widget.$widget );\n\t\t\t\t\n\t\t\t\tvar count    = (data['current_page'] * data['per_page']);\n\t\t\t\tvar total    = data['total'];\n\t\t\t\tvar omitted  = data['omitted'];\n\t\t\t\t\n\t\t\t\t//$page.text( data['search']['page'] * data['per_page']);\n\t\t\t\t$count.text( data['current_page'] * data['per_page'] );\n\t\t\t\t$total.text( total );\n\t\t\t\t$more.toggleClass( \"board-list-hasmore\", omitted > 0 );\n\t\t\t\t$omitted.toggle( omitted > 0 );\n\t\t\t\t$omitted.attr('data-page', data['page']);\n\t\t\t},\n\t\t\t\n\t\t\ttags : function(tags) {\n\t\t\t\tvar selector = widget.options.selector;\n\t\t\t\tvar template = widget.options.template;\n\t\t\t\tvar $list    = $( selector['tag-list'], widget.$widget );\n\t\t\t\t\n\t\t\t\tif ($list.length && tags instanceof Object)\n\t\t\t\t{\n\t\t\t\t\t$.each( tags, function(tag, weight) {\n\t\t\t\t\t\tvar $item = $( template['tag-item'] );\n\t\t\t\t\t\tvar $link = $( template['tag-link'] );\n\t\t\t\t\t\t\n\t\t\t\t\t\t$link\n\t\t\t\t\t\t\t.css( 'font-size', weight+\"%\" )\n\t\t\t\t\t\t\t.text( tag.tag )\n\t\t\t\t\t\t\t.appendTo( $item );\n\t\t\t\t\t\t\n\t\t\t\t\t\t$item.appendTo( $list );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tevents : {\n\t\t\tsortClick : function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tvar $th       = $(this);\n\t\t\t\tvar sort       = $th.attr('data-column');\n\t\t\t\tvar sortBy     = \"desc\";\n\t\t\t\tvar parameters = $.extend( {}, widget.lastSearch );\n\t\t\t\t\n\t\t\t\tif ($th.hasClass(\"sorting-by-desc\")) {\n\t\t\t\t\tsortBy = \"asc\";\n\t\t\t\t}\n\t\t\t\telse if ($th.hasClass(\"sorting-by-asc\")) {\n\t\t\t\t\tsort   = false;\n\t\t\t\t\tsortBy = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$( widget.options.selector['tag-list'], widget.$widget ).html(\"\");\n\t\t\t\t$( widget.options.selector['board-body'], widget.$widget ).html(\"\");\n\t\t\t\t\n\t\t\t\t$(\".sorting-by-asc, .sorting-by-desc\")\n\t\t\t\t\t.removeClass(\"sorting-by-asc sorting-by-desc\");\n\t\t\t\t\n\t\t\t\t$th.toggleClass(\"sorting-by-desc\", sortBy == \"desc\");\n\t\t\t\t$th.toggleClass(\"sorting-by-asc\",  sortBy == \"asc\");\n\t\t\t\t\n\t\t\t\tparameters.page   = 1;\n\t\t\t\tparameters.sort   = sort;\n\t\t\t\tparameters.sortBy = sortBy;\n\t\t\t\t\n\t\t\t\tif (sort === false || sortBy === false)\n\t\t\t\t{\n\t\t\t\t\tdelete parameters.sort;\n\t\t\t\t\tdelete parameters.sortBy;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twidget.submit( parameters );\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\n\t\t\tloadMore : function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tvar parameters = $.extend( {}, widget.lastSearch );\n\t\t\t\t\n\t\t\t\tparameters.page = parseInt(parameters.page, 10);\n\t\t\t\t\n\t\t\t\tif (isNaN(parameters.page))\n\t\t\t\t{\n\t\t\t\t\tparameters.page = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t++parameters.page;\n\t\t\t\t\n\t\t\t\tif (parameters.page === 1)\n\t\t\t\t{\n\t\t\t\t\t++parameters.page;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twidget.submit( parameters );\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\n\t\t\thashChange : function(event) {\n\t\t\t\tif (window.location.hash != \"\")\n\t\t\t\t{\n\t\t\t\t\t// Turns \"#porn,tits\" into \"porn tits\" for easier search results.\n\t\t\t\t\tvar tags = window.location.hash.substr(1, window.location.hash.length).split(\",\");\n\t\t\t\t\tvar hash = tags.join(\" \");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar tags = [];\n\t\t\t\t\tvar hash = \"\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$( widget.options.selector['search-tag'], widget.$widget ).val( hash );\n\t\t\t\t$( widget.options.selector['tag-list'], widget.$widget ).html(\"\");\n\t\t\t\t$( widget.options.selector['board-body'], widget.$widget ).html(\"\");\n\t\t\t\t\n\t\t\t\twidget.submit( { 'tags' : tags } );\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t\n\t\t\tsearchSubmit : function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\t$( widget.options.selector['tag-list'], widget.$widget ).html(\"\");\n\t\t\t\t$( widget.options.selector['board-body'], widget.$widget ).html(\"\");\n\t\t\t\t\n\t\t\t\twidget.submit( { \n\t\t\t\t\t'lang'  : event.data.searchLang.val(),\n\t\t\t\t\t'tags'  : event.data.searchTag.val(),\n\t\t\t\t\t'title' : event.data.searchTitle.val(),\n\t\t\t\t\t'sfw'   : event.data.searchSfw.prop('checked') ? 1 : 0\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\n\t\t\ttagClick : function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tvar $this  = $(this),\n\t\t\t\t\t$input = $( widget.options.selector['search-tag'] );\n\t\t\t\t\n\t\t\t\t$input\n\t\t\t\t\t.val( ( $input.val() + \" \" + $this.text() ).replace(/\\s+/g, \" \").trim() )\n\t\t\t\t\t.trigger( 'change' )\n\t\t\t\t\t.focus();\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t\n\t\tsubmit : function( data ) {\n\t\t\tvar $boardlist    = widget.$widget;\n\t\t\tvar $boardload    = $( widget.options.selector['board-loading'], $boardlist );\n\t\t\tvar $searchSubmit = $( widget.options.selector['search-submit'], $boardlist );\n\t\t\tvar $footerMore   = $( widget.options.selector['board-omitted'], $boardlist );\n\t\t\t\n\t\t\t$searchSubmit.prop( 'disabled', true );\n\t\t\t$boardload.css('display', 'table-row');\n\t\t\t$footerMore.hide();\n\t\t\t\n\t\t\treturn jQuery.ajax({\n\t\t\t\t\ttype:        \"GET\",\n\t\t\t\t\tmethod:      \"GET\",\n\t\t\t\t\turl:         widget.options.searchUrl,\n\t\t\t\t\tdata:        data,\n\t\t\t\t\tdataType:    \"json\",\n\t\t\t\t\tcontentType: \"application/json; charset=utf-8\"\n\t\t\t\t})\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$searchSubmit.prop( 'disabled', false );\n\t\t\t\t\t$boardload.hide();\n\t\t\t\t\t\n\t\t\t\t\twidget.build.boardlist( data );\n\t\t\t\t});\n\t\t}\n\t};\n\t\n\treturn widget;\n} );","/**\n * Captcha widget\n */\nib.widget(\"captcha\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\t// The default values that are set behind init values.\n\t\tdefaults : {\n\t\t\t\n\t\t\tcaptchaUrl    : \"/cp/captcha\",\n\t\t\treloadUrl     : \"/cp/captcha/replace.json\",\n\t\t\t\n\t\t\t// Selectors for finding and binding elements.\n\t\t\tselector : {\n\t\t\t\t'captcha'         : \".captcha\",\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Events\n\t\tevents   : {\n\t\t\tcaptchaAjaxFail : function(jqXHR, textStatus, errorThrown) {\n\t\t\t\tif (jqXHR.status == 429) {\n\t\t\t\t\t// Retry again in a second.\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\twidget.events.captchaReload();\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tcaptchaLoad : function(event) {\n\t\t\t\tvar $captcha = $(this),\n\t\t\t\t\t$parent  = $captcha.parent();\n\t\t\t\t\n\t\t\t\t$parent.removeClass(\"captcha-loading\");\n\t\t\t},\n\t\t\t\n\t\t\tcaptchaLoadIn : function(event, captcha) {\n\t\t\t\tvar $captcha = $(widget.options.selector['captcha'], widget.$widget),\n\t\t\t\t\t$hidden  = $captcha.next();\n\t\t\t\t\n\t\t\t\t$captcha.attr('src', widget.options.captchaUrl + \"/\" + captcha['hash_string'] + \".png\");\n\t\t\t\t$hidden.val(captcha['hash_string']);\n\t\t\t},\n\t\t\t\n\t\t\tcaptchaReload : function() {\n\t\t\t\tvar $captcha = $(widget.options.selector['captcha'], widget.$widget),\n\t\t\t\t\t$parent  = $captcha.parent(),\n\t\t\t\t\t$field   = $captcha.parent().children(\"input\");\n\t\t\t\t\n\t\t\t\t$parent.addClass(\"captcha-loading\");\n\t\t\t\t$field.val(\"\").focus();\n\t\t\t\t\n\t\t\t\tjQuery.getJSON(widget.options.reloadUrl, function(data) {\n\t\t\t\t\twidget.$widget.trigger('load', data);\n\t\t\t\t})\n\t\t\t\t.fail(widget.events.captchaAjaxFail);\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Event bindings\n\t\tbind     : {\n\t\t\twidget : function() {\n\t\t\t\t\n\t\t\t\t$(widget.options.selector['captcha'])\n\t\t\t\t\t// Load events cannot be tied on parents.\n\t\t\t\t\t// Watch for source changes on the captcha.\n\t\t\t\t\t.on('load.ip-captcha', widget.events.captchaLoad);\n\t\t\t\t\n\t\t\t\twidget.$widget\n\t\t\t\t\t// Watch for captcha clicks.\n\t\t\t\t\t.on('load.ib-captcha',                                       widget.events.captchaLoadIn)\n\t\t\t\t\t.on('reload.ib-captcha',                                     widget.events.captchaReload)\n\t\t\t\t\t.on('click.ib-captcha',  widget.options.selector['captcha'], widget.events.captchaReload);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t};\n\t\n\treturn widget;\n});\n","// ============================================================\n// Purpose                      : Config Sheets\n// Contributors                 : jaw-sh\n// ============================================================\n\nib.widget(\"config\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\tdefaults : {\n\t\t\tselector : {\n\t\t\t\t'field'         : \".field-control\",\n\t\t\t\t\n\t\t\t\t'list-template' : \".option-list .option-item-template .field-control\",\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Events\n\t\tevents   : {\n\t\t\t\n\t\t\t// Adds additional config list items on demand.\n\t\t\tlistTemplateChange : function(event) {\n\t\t\t\tvar $template = $(this);\n\t\t\t\tvar $oldItem  = $template.parent();\n\t\t\t\tvar $newItem  = $oldItem.clone();\n\t\t\t\t\n\t\t\t\t$oldItem.removeClass(\"option-item-template\");\n\t\t\t\t$newItem.hide().insertAfter($oldItem).fadeIn(250);\n\t\t\t\t$newItem.children( widget.options.selector['field'] ).val(\"\");\n\t\t\t}\n\t\t\t\n\t\t},\n\t\t\n\t\t// Event bindings\n\t\tbind     : {\n\t\t\twidget : function() {\n\t\t\t\t\n\t\t\t\twidget.$widget\n\t\t\t\t\t.on('keydown', widget.options.selector['list-template'], widget.events.listTemplateChange)\n\t\t\t\t;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t};\n\t\n\treturn widget;\n});\n","// ===========================================================================\n// Purpose          : Content\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n    // Widget blueprint\n    var blueprint = ib.getBlueprint();\n\n    // Content events\n    var events = {\n        doContentUpdate : function(event) {\n            blueprint.prototype.adjustDisplay(event.data.setting.get());\n        }\n    };\n\n    // Configuration options\n    var options = {\n        sfw : {\n            type : \"bool\",\n            initial : true,\n            onChange : events.doContentUpdate,\n            onUpdate : events.doContentUpdate\n        }\n    };\n\n    blueprint.prototype.adjustDisplay = function(sfw) {\n        var widget  = this;\n\n        var sfw = widget.is('sfw');\n        $(\"body\").toggleClass('nsfw-filtered', sfw);\n        $(\"body\").toggleClass('nsfw-allowed', !sfw);\n\n        // var $pageStylesheet = $(widget.defaults.selector['page-stylesheet']);\n        // $pageStylesheet.attr('href', sfw\n        //     ? $pageStylesheet.data('empty')\n        //     : widget.defaults.nsfw_skin\n        // );\n    };\n\n    // Event bindings\n    blueprint.prototype.bind = function() {\n        var widget  = this;\n        var $widget = this.$widget;\n        var data    = {\n            widget  : widget,\n            $widget : $widget\n        };\n\n        widget.adjustDisplay(widget.is('sfw'));\n    };\n\n    blueprint.prototype.defaults = {\n        nsfw_skin : \"/static/css/skins/next-yotsuba.css\",\n\n        selector : {\n            'page-stylesheet' : \"#page-stylesheet\"\n        }\n    };\n\n    blueprint.prototype.events = {\n    };\n\n    ib.widget(\"content\", blueprint, options);\n})(window, window.jQuery);\n","/**\n * Stripe Cashier Form\n */\nib.widget(\"donate\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\tnotices  : null,\n\t\t\n\t\t// The default values that are set behind init values.\n\t\tdefaults : {\n\t\t\t// Config options for this widget.\n\t\t\tconfig   : {\n\t\t\t\t'merchant'      : window.ib.config('merchant', false),\n\t\t\t\t'stripe-key'    : window.ib.config('stripe_key', false),\n\t\t\t\t'braintree-key' : window.ib.config('stripe_key', false)\n\t\t\t},\n\t\t\t\n\t\t\t// Selectors for finding and binding elements.\n\t\t\tselector : {\n\t\t\t\t'widget'             : \"#payment-form\",\n\t\t\t\t'notices'            : \"[data-widget=notice]:first\",\n\t\t\t\t\n\t\t\t\t'time'               : \"#payment-time\",\n\t\t\t\t\n\t\t\t\t'input-ccn'          : \"#ccn\",\n\t\t\t\t'input-cvc'          : \"#cvc\",\n\t\t\t\t'input-exp-month'    : \"#month\",\n\t\t\t\t'input-exp-year'     : \"#year\",\n\t\t\t\t'input-pay-monthly'  : \"#payment-monthly\",\n\t\t\t\t'input-pay-once'     : \"#payment-once\",\n\t\t\t\t'input-sub'          : \"#subscription\",\n\t\t\t\t'input-amount'       : \".donate-option-input:checked\",\n\t\t\t\t'input-select-other' : \"#input_amount_other\",\n\t\t\t\t'input-amount-other' : \"#input_amount_other_box\",\n\t\t\t\t\n\t\t\t\t'inputs-cycle'       : \".donate-cycle-input:checked\",\n\t\t\t\t'inputs-amount'      : \".donate-option-input, #input_amount_other_box\",\n\t\t\t\t\n\t\t\t\t'message'            : \"#payment-process\"\n\t\t\t},\n\t\t\t\n\t\t\t// HTML Templates for dynamic construction\n\t\t\ttemplate : {\n\t\t\t\t'message-sent'      : \"<div id=\\\"payment-process\\\">Securely Contacting Merchant</div>\",\n\t\t\t\t'message-server'    : \"<div id=\\\"payment-process\\\">Processing Transaction</div>\",\n\t\t\t\t'thank-you'         : \"<div id=\\\"payment-received\\\">Thank you!</div>\"\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Compiled settings.\n\t\toptions  : false,\n\t\t\n\t\t// Event binding.\n\t\tbind     : {\n\t\t\tmerchant : function() {\n\t\t\t\t\n\t\t\t\tswitch (widget.options.config['merchant'])\n\t\t\t\t{\n\t\t\t\t\tcase \"braintree\" :\n\t\t\t\t\t\twindow.braintree.setup(window.ib.config('braintree_key'), \"custom\", {\n\t\t\t\t\t\t\tcontainer: widget.options.selector['widget'],\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase \"stripe\" :\n\t\t\t\t\t\twindow.Stripe.setPublishableKey(widget.options.config['stripe-key']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\twidget : function() {\n\t\t\t\t\n\t\t\t\twidget.bind.merchant();\n\t\t\t\t\n\t\t\t\t// $(widget.options.selector['input-pay-once']).insertBefore(widget.options.selector['input-pay-monthly']);\n\t\t\t\t\n\t\t\t\twidget.$widget\n\t\t\t\t\t.on('submit', widget.events.formSubmit)\n\t\t\t\t\t.on('change', widget.options.selector['input-ccn'], widget.events.ccnChange)\n\t\t\t\t\t.on('change', widget.options.selector['inputs-cycle'], widget.events.cycleChange)\n\t\t\t\t\t.on('change', widget.options.selector['inputs-amount'], widget.events.paymentChange)\n\t\t\t\t\t.on('change', widget.options.selector['input-amount-other'], widget.events.otherChange)\n\t\t\t\t\t.on('focus', widget.options.selector['input-amount-other'], widget.events.otherFocus);\n\t\t\t\t\n\t\t\t\twidget.events.cycleChange();\n\t\t\t\twidget.events.paymentChange();\n\t\t\t\t\n\t\t\t\twidget.notices = $(widget.options.selector['notices'])[0].widget;\n\t\t\t}\n\t\t},\n\t\t\n\t\t// HTML building.\n\t\tbuild    : {\n\t\t\t\n\t\t},\n\t\t\n\t\t// Event trigger handlers.\n\t\tevents   : {\n\t\t\tajaxAlways     : function(data, textStatus, errorThrown) {\n\t\t\t\twidget.$widget.find('button').prop('disabled', false);\n\t\t\t},\n\t\t\t\n\t\t\tajaxDone     : function(data, textStatus, errorThrown) {\n\t\t\t\tif (data.amount !== false)\n\t\t\t\t{\n\t\t\t\t\tvar $ty = $(widget.options.template['thank-you']);\n\t\t\t\t\t\n\t\t\t\t\t$(widget.options.selector['message']).replaceWith($ty);\n\t\t\t\t\t$ty.hide().fadeIn(500);\n\t\t\t\t\tsetTimeout(function() { widget.$widget.unblock(); }, 1500);\n\t\t\t\t\t\n\t\t\t\t\twidget.notices.push(\"You were successfully charged for <strong>\" + data.amount + \"</strong>. Thank you for your support!\", \"success\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twidget.$widget.unblock();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$.each(data.errors, function(index, error) {\n\t\t\t\t\twidget.notices.push(error, \"error\");\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tajaxFail     : function(data, textStatus, errorThrown) {\n\t\t\t\tconsole.log(data);\n\t\t\t\t\n\t\t\t\twidget.$widget.unblock();\n\t\t\t\twidget.notices.push(\"The server responded with an unknown error. You were not charged. Please report this issue.\", \"error\");\n\t\t\t},\n\t\t\t\n\t\t\tccnChange      : function(event) {\n\t\t\t\tvar $ccn = $(this);\n\t\t\t\t\n\t\t\t\t$ccn.val( $ccn.val().trim() );\n\t\t\t\t$ccn.validateCreditCard(\n\t\t\t\t\t\twidget.events.ccnValidate,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taccept: [\n\t\t\t\t\t\t\t\t'visa',\n\t\t\t\t\t\t\t\t'mastercard',\n\t\t\t\t\t\t\t\t'amex',\n\t\t\t\t\t\t\t\t'jcb',\n\t\t\t\t\t\t\t\t'discover',\n\t\t\t\t\t\t\t\t'diners_club_international',\n\t\t\t\t\t\t\t\t'diners_club_carte_blanche'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t},\n\t\t\t\n\t\t\tccnValidate    : function(result) {\n\t\t\t\t$(this)[0].className = \"field-control\";\n\t\t\t\t\n\t\t\t\tif (result.card_type)\n\t\t\t\t{\n\t\t\t\t\t$(this).addClass(result.card_type.name);\n\t\t\t\t\t\n\t\t\t\t\tvar cvcMax = result.card_type.name === \"amex\" ? 4 : 3;\n\t\t\t\t\t\n\t\t\t\t\t$(widget.options.selector['input-cvc'], widget.$widget).attr({\n\t\t\t\t\t\t'maxlength' : cvcMax,\n\t\t\t\t\t\t'size'      : cvcMax,\n\t\t\t\t\t\t'pattern'   : \"[0-9]{\"+cvcMax+\"}\"\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (result.valid) {\n\t\t\t\t\t\treturn $(this).addClass('control-valid');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn $(this).removeClass('control-invalid');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tcycleChange    : function(event) {\n\t\t\t\tvar paymentVal = $(widget.options.selector['inputs-cycle']).filter(\":checked\").val();\n\t\t\t\t\n\t\t\t\tif (paymentVal != \"once\")\n\t\t\t\t{\n\t\t\t\t\t$(widget.options.selector['input-amount-other'])\n\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.toggle(false);\n\t\t\t\t\t\n\t\t\t\t\t$(widget.options.selector['inputs-amount'])\n\t\t\t\t\t\t.filter(\"[value=12]\")\n\t\t\t\t\t\t\t.prop('checked', true);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$(widget.options.selector['input-amount-other'])\n\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.toggle(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twidget.events.paymentChange();\n\t\t\t},\n\t\t\t\n\t\t\totherFocus     : function(event) {\n\t\t\t\t$(this).val(\"\");\n\t\t\t\t$(widget.options.selector['input-select-other']).prop('checked', true);\n\t\t\t\twidget.events.paymentChange();\n\t\t\t},\n\t\t\t\n\t\t\totherChange    : function(event) {\n\t\t\t\twidget.events.paymentChange();\n\t\t\t},\n\t\t\t\n\t\t\tformSubmit     : function(event) {\n\t\t\t\twidget.notices.clear();\n\t\t\t\t\n\t\t\t\tvar valid = true;\n\t\t\t\tvar sel   = widget.options.selector;\n\t\t\t\t\n\t\t\t\t// Make sure the CCN has been validated by the jQuery tool.\n\t\t\t\tvar $ccn  = $(sel['input-ccn']);\n\t\t\t\tif (!$ccn.is(\".control-valid\"))\n\t\t\t\t{\n\t\t\t\t\twidget.notices.push(\"Please enter a valid credit card number.\", 'error');\n\t\t\t\t\t$ccn.focus().trigger('focus');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Check to see if CVC is valid.\n\t\t\t\tvar $cvc = $(sel['input-cvc']);\n\t\t\t\tif ((new RegExp(\"^\"+$cvc.attr('pattern')+\"$\")).test($cvc.val()) === false)\n\t\t\t\t{\n\t\t\t\t\twidget.notices.push(\"Please enter a valid security code. It is three or four digits and found on the back of the card.\", 'error');\n\t\t\t\t\t$ccn.focus().trigger('focus');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Check if expiration date is older than this month.\n\t\t\t\tvar $month     = $(sel['input-exp-month']);\n\t\t\t\tvar $year      = $(sel['input-exp-year']);\n\t\t\t\tvar expiration = parseInt($month.val(), 10) + (parseInt($year.val(), 10) * 12);\n\t\t\t\tvar expiredBy  = new Date().getMonth() + (new Date().getFullYear() * 12);\n\t\t\t\tif (expiration < expiredBy)\n\t\t\t\t{\n\t\t\t\t\twidget.notices.push(\"Double-check your expiration date. This card is invalid.\", 'error');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// See what amount we've entered.\n\t\t\t\tvar $amountSel = $(sel['input-amount']).filter(\":checked\");\n\t\t\t\tvar $amountInp = $(sel['input-amount-other']);\n\t\t\t\tvar amount     = 0;\n\t\t\t\tif (!$amountSel.length)\n\t\t\t\t{\n\t\t\t\t\twidget.notices.push(\"Please enter an amount.\", 'error');\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t\telse if ($amountSel.val() == \"Other\")\n\t\t\t\t{\n\t\t\t\t\tamount = parseInt($amountInp.val(), 10);\n\t\t\t\t\t\n\t\t\t\t\tif (isNaN(amount) || amount <= 3)\n\t\t\t\t\t{\n\t\t\t\t\t\twidget.notices.push(\"Please enter a real amount that is greater than $3.\", 'error');\n\t\t\t\t\t\t$amountInp.focus();\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t}\n\t\t\t\t\telse if (amount.toString() !== $amountInp.val())\n\t\t\t\t\t{\n\t\t\t\t\t\twidget.notices.push(\"Please enter a real, whole number as a donation amount.\", 'error');\n\t\t\t\t\t\t$amountInp.focus();\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (valid)\n\t\t\t\t{\n\t\t\t\t\tvar $form = $(this);\n\t\t\t\t\t\n\t\t\t\t\t$form.block({\n\t\t\t\t\t\tmessage : widget.options.template['message-sent'],\n\t\t\t\t\t\ttheme   : true\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Disable the submit button to prevent repeated clicks\n\t\t\t\t\t$form.find('button').prop('disabled', true);\n\t\t\t\t\t\n\t\t\t\t\t// Send the information to our merchant.\n\t\t\t\t\tswitch (widget.options.config['merchant'])\n\t\t\t\t\t{\n\t\t\t\t\t\tcase \"stripe\" :\n\t\t\t\t\t\t\tStripe.card.createToken($form, widget.events.stripeResponse);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\tcase \"braintree\" :\n\t\t\t\t\t\t\tvar client = new braintree.api.Client({clientToken: window.ib.config('braintree_key')});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclient.tokenizeCard({\n\t\t\t\t\t\t\t\t\tnumber:          $ccn.val(),\n\t\t\t\t\t\t\t\t\texpirationMonth: $month.val(),\n\t\t\t\t\t\t\t\t\texpirationYear:  $year.val(),\n\t\t\t\t\t\t\t\t\tcvv:             $cvc.val()\n\t\t\t\t\t\t\t\t}, widget.events.braintreeResponse);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Clear personal information.\n\t\t\t\t\t$(widget.options.selector['input-ccn'])\n\t\t\t\t\t\t.add(widget.options.selector['input-cvc'])\n\t\t\t\t\t\t\t.val(\"\")\n\t\t\t\t\t\t\t.trigger('change');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Prevent the form from submitting with the default action\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\n\t\t\tpaymentChange  : function(event) {\n\t\t\t\tvar workFactor = 0.1;\n\t\t\t\tvar timestamp = \"\";\n\t\t\t\t\n\t\t\t\tvar paymentVal = $(widget.options.selector['inputs-cycle']).filter(\":checked\").val();\n\t\t\t\tvar amount = $(widget.options.selector['input-amount']).filter(\":checked\").val();\n\t\t\t\t\n\t\t\t\tif( amount == \"Other\")\n\t\t\t\t{\n\t\t\t\t\tamount = parseInt($(widget.options.selector['input-amount-other']).val(), 10);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tamount = parseInt(amount, 10);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (isNaN(amount))\n\t\t\t\t{\n\t\t\t\t\tamount = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar hours = parseFloat(amount * workFactor);\n\t\t\t\t\n\t\t\t\tif (hours < 1)\n\t\t\t\t{\n\t\t\t\t\ttimestamp = (hours*60).toFixed(0) + \" minutes\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttimestamp = hours.toFixed(2) + \" hours\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar text = \"<strong>$\" + amount + \" USD</strong> will afford up to <wbr> <strong>\" + timestamp + \"</strong> of development time\" + (paymentVal == \"monthly\" ? \" per month\" : \"\");\n\t\t\t\t\n\t\t\t\t$(widget.options.selector['time']).html(text);\n\t\t\t},\n\t\t\t\n\t\t\t\n\t\t\tbraintreeResponse : function(err, nonce) {\n\t\t\t\tvar $form = widget.$widget;\n\t\t\t\t\n\t\t\t\tif (err) {\n\t\t\t\t\t// Show the errors on the form\n\t\t\t\t\twidget.notices.push(err, \"error\");\n\t\t\t\t\t\n\t\t\t\t\t$form.unblock();\n\t\t\t\t\t$form.find('button').prop('disabled', false);\n\t\t\t\t}\n\t\t\t\telse if (nonce) {\n\t\t\t\t\t// Response contains id and card, which contains additional card details\n\t\t\t\t\tvar token = nonce;\n\t\t\t\t\t\n\t\t\t\t\t// Insert the token into the form so it gets submitted to the server\n\t\t\t\t\t$form.append($('<input type=\"hidden\" name=\"nonce\" />').val(token));\n\t\t\t\t\t\n\t\t\t\t\t// Submit to server\n\t\t\t\t\tvar parameters = $form\n\t\t\t\t\t\t.add(\"<input type=\\\"hidden\\\" name=\\\"ajax\\\" value=\\\"1\\\" />\")\n\t\t\t\t\t\t.serialize();\n\t\t\t\t\t\n\t\t\t\t\tif ($(widget.options.selector['input-amount']).val() == \"Other\")\n\t\t\t\t\t{\n\t\t\t\t\t\tparameters += \"&amount=\" + $(widget.options.selector['input-amount-other']).val();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\twidget.submit(parameters);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Unrecognized braintree response.\", arguments);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tstripeResponse : function(status, response) {\n\t\t\t\tvar $form = widget.$widget;\n\t\t\t\t\n\t\t\t\tif (response.error) {\n\t\t\t\t\t// Show the errors on the form\n\t\t\t\t\twidget.notices.push(response.error.message, \"error\");\n\t\t\t\t\t\n\t\t\t\t\t$form.unblock();\n\t\t\t\t\t$form.find('button').prop('disabled', false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Response contains id and card, which contains additional card details\n\t\t\t\t\tvar token = response.id;\n\t\t\t\t\t\n\t\t\t\t\t// Insert the token into the form so it gets submitted to the server\n\t\t\t\t\t$form.append($('<input type=\"hidden\" name=\"nonce\" />').val(token));\n\t\t\t\t\t\n\t\t\t\t\t// Submit to server\n\t\t\t\t\tvar parameters = $form\n\t\t\t\t\t\t.add(\"<input type=\\\"hidden\\\" name=\\\"ajax\\\" value=\\\"1\\\" />\")\n\t\t\t\t\t\t.serialize();\n\t\t\t\t\t\n\t\t\t\t\tif ($(widget.options.selector['input-amount']).val() == \"Other\")\n\t\t\t\t\t{\n\t\t\t\t\t\tparameters += \"&amount=\" + $(widget.options.selector['input-amount-other']).val();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\twidget.submit(parameters);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Form submission.\n\t\tsubmit   : function(parameters) {\n\t\t\tvar $form = widget.$widget;\n\t\t\t\n\t\t\t// Change our server message.\n\t\t\t$(widget.options.selector['message']).replaceWith(widget.options.template['message-server']);\n\t\t\t\n\t\t\t$.post(\n\t\t\t\t$form.attr('action'),\n\t\t\t\tparameters\n\t\t\t)\n\t\t\t\t.done(widget.events.ajaxDone)\n\t\t\t\t.fail(widget.events.ajaxFail)\n\t\t\t\t.always(widget.events.ajaxAlways);\n\t\t}\n\t\t\n\t};\n\t\n\treturn widget;\n});\n","// ============================================================\n// Purpose                      : Global navigation\n// Contributors                 : jaw-sh\n// ============================================================\n\nib.widget(\"gnav\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\tdefaults : {\n\t\t\tstorage   : {\n\t\t\t\t// Mirrors board-favorite widget's.\n\t\t\t\t'favorites-data' : \"ib.favoritedata\"\n\t\t\t},\n\t\t\t\n\t\t\tselector : {\n\t\t\t\t'class-open'  : \"flyout-open\",\n\t\t\t\t\n\t\t\t\t'nav-link'    : \".gnav-link[data-item]\",\n\t\t\t\t\n\t\t\t\t'flyout'      : \".flyout\",\n\t\t\t\t'flyout-list' : \".flyout-list\",\n\t\t\t\t'flyout-link' : \".flyout-link\",\n\t\t\t\t\n\t\t\t\t'favorites'   : \"#favorite-boards\"\n\t\t\t},\n\t\t\t\n\t\t\ttemplates : {\n\t\t\t\t'flyout-item'  : \"<li class=\\\"flyout-item\\\"></li>\",\n\t\t\t\t'flyout-link'  : \"<a href=\\\"\\\" class=\\\"flyout-link\\\"></a>\",\n\t\t\t\t'flyout-uri'   : \"<span class=\\\"flyout-uri\\\"></span>\",\n\t\t\t\t'flyout-title' : \"<span class=\\\"flyout-title\\\"></span>\"\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Events\n\t\tevents   : {\n\t\t\tanyClick  : function(event) {\n\t\t\t\t// Close ally open flyouts.\n\t\t\t\tvar $flyouts = $(\".\"+widget.options.selector['class-open']);\n\t\t\t\t\n\t\t\t\t$flyouts.each(function() {\n\t\t\t\t\tconsole.log($(event.target).closest(this));\n\t\t\t\t\tif (!$(event.target).closest(this).length)\n\t\t\t\t\t{\n\t\t\t\t\t\t$(this).removeClass(widget.options.selector['class-open']);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\titemClick : function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\t\n\t\t\t\tvar $link    = $(this);\n\t\t\t\tvar item     = $link.attr('data-item');\n\t\t\t\tvar $flyout  = $(\"#flyout-\"+item);\n\t\t\t\t\n\t\t\t\tif ($flyout.length)\n\t\t\t\t{\n\t\t\t\t\t$flyout.toggleClass(widget.options.selector['class-open']);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tfavoritesBuild : function(event) {\n\t\t\t\twidget.build.favorites();\n\t\t\t},\n\t\t\t\n\t\t\tflyoutClick : function(event) {\n\t\t\t\t$(this).parents(\".\"+widget.options.selector['class-open'])\n\t\t\t\t\t.removeClass(widget.options.selector['class-open']);\n\t\t\t},\n\t\t\t\n\t\t\t// This is an HTML localStorage event.\n\t\t\t// it only fires if ANOTHER WINDOW trips the change.\n\t\t\tstorage : function(event) {\n\t\t\t\tif (event.originalEvent.key == widget.options.storage['favorites-data'])\n\t\t\t\t{\n\t\t\t\t\twidget.build.favorites();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Event bindings\n\t\tbind     : {\n\t\t\twidget : function() {\n\t\t\t\t$(window)\n\t\t\t\t\t.on( 'click.ib-gnav',   widget.events.anyClick )\n\t\t\t\t\t.on( 'storage.ib-gnav', widget.events.storage )\n\t\t\t\t;\n\t\t\t\t\n\t\t\t\twidget.$widget\n\t\t\t\t\t.on( 'click.ib-gnav', widget.options.selector['flyout-link'], widget.events.flyoutClick )\n\t\t\t\t\t.on( 'click.ib-gnav', widget.options.selector['nav-link'],    widget.events.itemClick )\n\t\t\t\t\t.on( 'build.ib-gnav', widget.options.selector['favorites'],   widget.events.favoritesBuild )\n\t\t\t\t;\n\t\t\t\t\n\t\t\t\t$(widget.options.selector['nav-link'], widget.$widget).each(function() {\n\t\t\t\t\tvar $link = $(this);\n\t\t\t\t\t\n\t\t\t\t\tif ($(\"#flyout-\" + $link.attr('data-item')).length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$link.attr('data-no-instant', \"true\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\twidget.build.favorites();\n\t\t\t}\n\t\t},\n\t\t\n\t\tbuild    : {\n\t\t\tfavorites : function() {\n\t\t\t\tif (typeof localStorage === \"object\")\n\t\t\t\t{\n\t\t\t\t\tvar $favorites = $(widget.options.selector['favorites'], widget.$widget);\n\t\t\t\t\tvar $list      = $(widget.options.selector['flyout-list'], $favorites);\n\t\t\t\t\tvar favorites  = localStorage.getItem(widget.options.storage['favorites-data']);\n\t\t\t\t\t\n\t\t\t\t\tif (typeof favorites === \"string\")\n\t\t\t\t\t{\n\t\t\t\t\t\tfavorites = JSON.parse(favorites);\n\t\t\t\t\t\t\n\t\t\t\t\t\t$favorites.css('display', favorites.length > 0 ? \"block\" : \"none\");\n\t\t\t\t\t\t$list.children().remove();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (favorites.length)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < favorites.length; ++i)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar favorite = favorites[i];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar $item  = $(widget.options.templates['flyout-item']);\n\t\t\t\t\t\t\t\tvar $link  = $(widget.options.templates['flyout-link']);\n\t\t\t\t\t\t\t\tvar $uri   = $(widget.options.templates['flyout-uri']);\n\t\t\t\t\t\t\t\tvar $title = $(widget.options.templates['flyout-title']);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$item\n\t\t\t\t\t\t\t\t\t.appendTo($list);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$link\n\t\t\t\t\t\t\t\t\t.attr('href', window.app.url+\"/\"+favorite.board_uri+\"/\")\n\t\t\t\t\t\t\t\t\t.appendTo($item);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$uri\n\t\t\t\t\t\t\t\t\t.text(\"/\"+favorite.board_uri+\"/\")\n\t\t\t\t\t\t\t\t\t.appendTo($link);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$title\n\t\t\t\t\t\t\t\t\t.text(favorite.title)\n\t\t\t\t\t\t\t\t\t.appendTo($link);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n\t\n\treturn widget;\n});\n","// ===========================================================================\n// Purpose          : Posts\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n\t// Widget blueprint\n\tvar blueprint = ib.getBlueprint();\n\n\t// Configuration options\n\tvar options = {\n\t\tenable : {\n\t\t\ttype : \"bool\",\n\t\t\tinitial : false\n\t\t}\n\t};\n\n\t// Event bindings\n\tblueprint.prototype.bind = function() {\n\t\tif (!this.is('enable'))\n\t\t{\n\t\t\tconsole.log(\"InstantClick ignored\");\n\t\t\treturn false;\n\t\t}\n\n\t\tconsole.log(\"InstantClick init\");\n\n\t\tInstantClick.init(this.options.wait);\n\n\t\tblueprint.prototype.storage.jQuery       = window.jQuery;\n\t\tblueprint.prototype.storage.ib           = window.ib;\n\t\tblueprint.prototype.storage.InstantClick = window.InstantClick;\n\n\t\t$.each(this.events.InstantClick, function(eventName, eventClosure) {\n\t\t\tInstantClick.on(eventName, eventClosure);\n\t\t});\n\t};\n\n\tblueprint.prototype.defaults = {\n\t\t'wait' : 50\n\t};\n\n\tblueprint.prototype.events = {\n\t\tInstantClick : {\n\t\t\tchange : function() {\n\t\t\t\tconsole.log(\"InstantClick change\");\n\n\t\t\t\tthis.storage;\n\t\t\t\t// Restore our cached objects.\n\t\t\t\twindow.jQuery       = blueprint.prototype.storage.jQuery;\n\t\t\t\twindow.$            = blueprint.prototype.storage.jQuery;\n\t\t\t\twindow.ib           = blueprint.prototype.storage.ib;\n\t\t\t\twindow.InstantClick = blueprint.prototype.storage.InstantClick;\n\n\t\t\t\t// Insert our window.app data.\n\t\t\t\tjQuery.globalEval( $(\"#js-app-data\").html() );\n\n\t\t\t\t// Bind all widgets.\n\t\t\t\tib.bindAll();\n\n\t\t\t\t// Scroll to requested item.\n\t\t\t\tif (window.location.hash != \"\")\n\t\t\t\t{\n\t\t\t\t\tvar elem = document.getElementById(window.location.hash);\n\n\t\t\t\t\tif (elem && typeof elem.scrollToElement === \"function\")\n\t\t\t\t\t{\n\t\t\t\t\t\telem.scrollToElement();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Long-term storage that the InstantCLick widget uses to preserve script\n\t// items between page sessions.\n\tblueprint.prototype.storage = {\n\t\tjQuery       : null,\n\t\tib           : null,\n\t\tInstantClick : null,\n\t};\n\n\tib.widget(\"instantclick\", blueprint, options);\n\n\t$(document).one('ready', function(event) {\n\t\tib.bindElement(document.documentElement);\n\t});\n})(window, window.jQuery);\n","// ===========================================================================\n// Purpose          : JavaScript Configuration UI Dialog\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n\t// Widget blueprint\n\tvar blueprint = ib.getBlueprint();\n\t\n\t// Configuration options\n\tvar options = {\n\t\t\n\t};\n\t\n\t// Main Widget Initialization Binding\n\tblueprint.prototype.bind = function() {\n\t\tvar data = {\n\t\t\twidget  : this,\n\t\t\t$widget : this.$widget\n\t\t};\n\t\t\n\t\tthis.$widget.on('click.ib-js-config', data, this.events.navClick);\n\t};\n\t\n\t// Default configurable valuess.\n\tblueprint.prototype.defaults = {\n\t\t\n\t\t// Significant Class Names\n\t\tclassname : {\n\t\t\tmenuactive : \"config-nav-active\"\n\t\t},\n\t\t\n\t\t// jQuery Selectors\n\t\tselector : {\n\t\t\tclose     : \"#js-config-close\",\n\t\t\tmenuitems : \".config-nav-item\",\n\t\t\tfieldsets : \".config-group\"\n\t\t},\n\t\t\n\t\t// HTML Templates\n\t\ttemplate : {\n\t\t\t// The outer panel.\n\t\t\tpanel     : \"<form id=\\\"js-config\\\"></form>\",\n\t\t\t\n\t\t\t// Close button\n\t\t\tclose     : \"<div id=\\\"js-config-close\\\"><i class=\\\"fa fa-close\\\"></i></div>\",\n\t\t\t\n\t\t\t// Config title\n\t\t\ttitle     : \"<h1 class=\\\"config-title\\\">Infinity Next User Options</h1>\",\n\t\t\t\n\t\t\t// Inner container.\n\t\t\tcontainer : \"<table class=\\\"config-table\\\"></table>\",\n\t\t\t\n\t\t\t// Sub-container for both nav and fieldsets.\n\t\t\tinterior  : \"<tr class=\\\"config-interior\\\"></tr>\",\n\t\t\t\n\t\t\t// Outer container for the navigation list.\n\t\t\tnavcell   : \"<td class=\\\"config-cell cell-nav\\\"></td>\",\n\t\t\t\n\t\t\t// Navigation list.\n\t\t\tnavlist   : \"<ul class=\\\"config-nav-list\\\"></ul>\",\n\t\t\t\n\t\t\t// Navigation item.\n\t\t\tnavitem   : \"<li class=\\\"config-nav-item\\\"><i class=\\\"fa\\\"></i></li>\",\n\t\t\t\n\t\t\t// Outer container for the fieldsets\n\t\t\tfieldcell : \"<td class=\\\"config-cell cell-fields\\\"></td>\",\n\t\t\t\n\t\t\t// Widget fieldset\n\t\t\tfieldset  : \"<fieldset class=\\\"config-group\\\"></fieldset>\",\n\t\t\t\n\t\t\t// Widget fieldset legend\n\t\t\tlegend    : \"<legend class=\\\"config-legend\\\"></legend>\",\n\t\t\t\n\t\t\t// Fieldset description\n\t\t\tfielddesc : \"<p class=\\\"config-desc\\\"></p>\",\n\t\t\t\n\t\t\t// Row for the fields.\n\t\t\trow       : \"<label class=\\\"config-row\\\"></label>\",\n\t\t\t\n\t\t\t// Text container for field labels.\n\t\t\trowname   : \"<span class=\\\"config-row-name\\\"></span>\"\n\t\t}\n\t};\n\t\n\t// Event definitions\n\tblueprint.prototype.events = {\n\t\t\n\t\tmenuClick : function(event) {\n\t\t\t// Change the active fieldset.\n\t\t\tvar widget = event.data.widget;\n\t\t\tvar target = event.delegateTarget;\n\t\t\tvar menuWidgetName = event.target.dataset.fieldset;\n\t\t\t\n\t\t\tvar $menuitems = $(widget.options.selector.menuitems, target);\n\t\t\tvar $fieldsets = $(widget.options.selector.fieldsets, target);\n\t\t\t\n\t\t\t// Change visible fieldsets.\n\t\t\t$fieldsets.each(function() {\n\t\t\t\t$(this).toggle(this.dataset.fieldset == menuWidgetName);\n\t\t\t});\n\t\t\t\n\t\t\t// Change active menu item.\n\t\t\t$menuitems.each(function() {\n\t\t\t\t$(this).toggleClass(\n\t\t\t\t\twidget.options.classname.menuactive,\n\t\t\t\t\tthis.dataset.fieldset == menuWidgetName\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t\t\n\t\tnavClick : function(event) {\n\t\t\t// Open the interface for changing settings.\n\t\t\tevent.data.widget.presentDialog();\n\t\t}\n\t\t\n\t};\n\t\n\t// Dialog (Option Menu) Presentation\n\tblueprint.prototype.presentDialog = function() {\n\t\tvar widget     = this;\n\t\tvar $dialog    = $(widget.options.template.panel);\n\t\t\n\t\t// Begin putting together the dialog.\n\t\tvar $close = $(widget.options.template.close);\n\t\t$close.appendTo($dialog);\n\t\t\n\t\tvar $title = $(widget.options.template.title);\n\t\t$title.appendTo($dialog);\n\t\t\n\t\tvar $container = $(widget.options.template.container);\n\t\t$container.appendTo($dialog);\n\t\t\n\t\tvar $interior  = $(widget.options.template.interior);\n\t\t$interior.appendTo($container);\n\t\t\n\t\tvar $navcell   = $(widget.options.template.navcell);\n\t\t$navcell.appendTo($interior);\n\t\t\n\t\tvar $fieldcell = $(widget.options.template.fieldcell);\n\t\t$fieldcell.appendTo($interior);\n\t\t\n\t\tvar $navlist   = $(widget.options.template.navlist);\n\t\t$navlist.appendTo($navcell);\n\t\t\n\t\t// This indicates if we've unhidden our first fieldset pane.\n\t\tvar firstFieldset = true;\n\t\t\n\t\t// Loop through each widget and pluck their settings.\n\t\tjQuery.each(ib.settings, function(widgetName, settings) {\n\t\t\t// Ensure there are options for this group.\n\t\t\tif (Object.keys(settings).length)\n\t\t\t{\n\t\t\t\t// Translate our widget name to a title.\n\t\t\t\tvar widgetTitle = ib.trans(widgetName + \".title\");\n\t\t\t\tvar widgetDesc  = ib.trans(widgetName + \".desc\");\n\t\t\t\t\n\t\t\t\t// Add a fieldset.\n\t\t\t\tvar $fieldset = $(widget.options.template.fieldset)\n\t\t\t\t\t.data('fieldset', widgetName)\n\t\t\t\t\t.attr('data-fieldset', widgetName)\n\t\t\t\t\t.appendTo($fieldcell);\n\t\t\t\t\n\t\t\t\t// Append its legend.\n\t\t\t\t$(widget.options.template.legend)\n\t\t\t\t\t.append(widgetTitle)\n\t\t\t\t\t.appendTo($fieldset);\n\t\t\t\t\n\t\t\t\t// Append an optional description.\n\t\t\t\tif (widgetDesc.length > 0)\n\t\t\t\t{\n\t\t\t\t\t$(widget.options.template.fielddesc)\n\t\t\t\t\t\t.append(widgetDesc)\n\t\t\t\t\t\t.appendTo($fieldset);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Add a navigation item.\n\t\t\t\t$(widget.options.template.navitem)\n\t\t\t\t\t.addClass('item-'+widgetName)\n\t\t\t\t\t.data('fieldset', widgetName)\n\t\t\t\t\t.attr('data-fieldset', widgetName)\n\t\t\t\t\t.append(widgetTitle)\n\t\t\t\t\t.appendTo($navlist);\n\t\t\t\t\n\t\t\t\tjQuery.each(settings, function(settingName, setting) {\n\t\t\t\t\t// Turn a setting into a row.\n\t\t\t\t\tvar $name = $(widget.options.template.rowname)\n\t\t\t\t\t\t.append(setting.getLabel());\n\t\t\t\t\t\n\t\t\t\t\tvar $field = setting.toHTML();\n\t\t\t\t\t\n\t\t\t\t\t$(widget.options.template.row)\n\t\t\t\t\t\t.append($name)\n\t\t\t\t\t\t.append($field)\n\t\t\t\t\t\t.appendTo($fieldset)\n\t\t\t\t\t\t.attr('id', \"js-config-row-\"+widgetName+\"-\"+settingName);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (firstFieldset)\n\t\t\t\t{\n\t\t\t\t\tfirstFieldset = false;\n\t\t\t\t\t$fieldset.show();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Blocks out the screen with an interruptable dialog.\n\t\t$.blockUI({\n\t\t\tmessage    : $dialog,\n\t\t\tcss        : {\n\t\t\t\tbackground : \"none\",\n\t\t\t\tborder     : \"none\",\n\t\t\t\tpadding    : 0,\n\t\t\t\tmargin     : 0,\n\t\t\t\ttextAlign  : \"left\",\n\t\t\t\tcursor     : \"normal\",\n\t\t\t\ttop        : \"10vh\",\n\t\t\t\tleft       : \"0\",\n\t\t\t\twidth      : \"100%\",\n\t\t\t\t'pointer-events' : \"none\"\n\t\t\t},\n\t\t\toverlayCSS : {\n\t\t\t\tborder     : \"none\",\n\t\t\t\tpadding    : 0,\n\t\t\t\tmargin     : 0,\n\t\t\t\ttextAlign  : \"left\",\n\t\t\t\tcursor     : \"normal\"\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Bind fade event.\n\t\t$(\".blockOverlay\").one('click.ib-js-config', $.unblockUI);\n\t\t$(widget.options.selector.close)\n\t\t\t.one('click.ib-js-config', $.unblockUI);\n\t\t\n\t\t// Bind menu toggle items\n\t\t$dialog.on(\n\t\t\t'click.ib-js-config',\n\t\t\twidget.options.selector.menuitems,\n\t\t\t{\n\t\t\t\twidget  : widget,\n\t\t\t\t$widget : widget.$widget\n\t\t\t},\n\t\t\tthis.events.menuClick\n\t\t);\n\t};\n\t\n\tib.widget(\"js-config\", blueprint, options);\n})(window, window.jQuery);\n","// ===========================================================================\n// Purpose          : Lazy Image Loading\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n\t// Widget blueprint\n\tvar blueprint = ib.getBlueprint();\n\t\n\t// Configuration options\n\tvar options = {\n\t\tenable : {\n\t\t\ttype : \"bool\",\n\t\t\tinitial : false\n\t\t}\n\t};\n\t\n\t// Main Widget Initialization Binding\n\tblueprint.prototype.bind = function() {\n\t\tif (!this.is('enable'))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tvar widget  = this;\n\t\tvar $widget = this.$widget;\n\t\tvar data    = {\n\t\t\twidget  : widget,\n\t\t\t$widget : $widget\n\t\t};\n\t\t\n\t\t$widget.on('click', data, this.events.navClick);\n\t\t\n\t\t// With this image remove src data and indicate it's lazy.\n\t\t$widget.addClass(\"lazy-load\");\n\t\t$widget.attr('data-src', $widget[0].src);\n\t\t$widget[0].src = \"\";\n\t\t\n\t\t$widget.on('lazywake.ib-lazymg',  data, widget.events.imageLazyWake);\n\t\t$(window).on('scroll.ib-lazyimg', data, widget.events.windowScroll);\n\t\t\n\t\treturn true;\n\t};\n\t\n\t// The default values that are set behind init values.\n\tblueprint.prototype.defaults = {\n\t\t// Selectors for finding and binding elements.\n\t\tselector : {\n\t\t\t'img'      : \"img\",\n\t\t\t'img-lazy' : \"img.lazy-load\",\n\t\t}\n\t};\n\t\n\tblueprint.prototype.events = {\n\t\timageLazyWake : function(event) {\n\t\t\tvar widget  = event.data.widget;\n\t\t\tvar $widget = event.data.$widget;\n\t\t\t\n\t\t\t$(widget.options.selector['img-lazy'], $widget).each(function() {\n\t\t\t\tvar $this = $(this);\n\t\t\t\t\n\t\t\t\t$this.removeClass(\"lazy-load\");\n\t\t\t\t\n\t\t\t\t// Correct the source.\n\t\t\t\tthis.src = $this.attr('data-src');\n\t\t\t\t\n\t\t\t\t// Call the postbox widget to check if the image can be played\n\t\t\t\t// before the user tries to click it.\n\t\t\t\t$this.trigger('media-check');\n\t\t\t});\n\t\t},\n\t\t\n\t\twindowScroll : function(event) {\n\t\t\t// Determine if the boundaries of this image are in the viewport.\n\t\t\tvar widget        = event.data.widget;\n\t\t\tvar $widget       = event.data.$widget;\n\t\t\tvar $window       = $(window);\n\t\t\t\n\t\t\tvar docViewTop    = $window.scrollTop();\n\t\t\tvar docViewBottom = docViewTop + $window.height();\n\t\t\t\n\t\t\tvar viewPad = 200;\n\t\t\t\n\t\t\tvar elemTop       = $widget.offset().top - viewPad;\n\t\t\tvar elemBottom    = elemTop + $widget.height() + viewPad;\n\t\t\t\n\t\t\t// We don't need the entire image to be present, just either edge.\n\t\t\t\n\t\t\t// If the top boundary is present\n\t\t\tif ( ((elemTop <= docViewBottom) && (elemTop >= docViewTop)) ||\n\t\t\t\t((elemBottom <= docViewBottom) && (elemBottom >= docViewTop)) )\n\t\t\t{\n\t\t\t\t$widget.trigger('lazywake');\n\t\t\t}\n\t\t}\n\t};\n\t\n\tib.widget(\"lazyimg\", blueprint, options);\n})(window, window.jQuery);\n","/**\n * Message Widget\n */\nib.widget(\"notice\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\t// The default values that are set behind init values.\n\t\tdefaults : {\n\t\t\t// Selectors for finding and binding elements.\n\t\t\tselector : {\n\t\t\t\t'widget'        : \".form-messages\",\n\t\t\t\t'message'       : \".form-message\",\n\t\t\t},\n\t\t\t\n\t\t\t// HTML Templates for dynamic construction\n\t\t\ttemplate : {\n\t\t\t\t'message'         : \"<li class=\\\"form-message\\\"></li>\",\n\t\t\t\t'message-info'    : \"<li class=\\\"form-message message-info\\\"></li>\",\n\t\t\t\t'message-success' : \"<li class=\\\"form-message message-success\\\"></li>\",\n\t\t\t\t'message-error'   : \"<li class=\\\"form-message message-error\\\"></li>\"\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Compiled settings.\n\t\toptions  : false,\n\t\t\n\t\tbind     : {\n\t\t\twidget : function() {\n\t\t\t\twidget.$widget\n\t\t\t\t\t.on('click.ib-notice', widget.options.selector['message'], widget.events.noticeClick)\n\t\t\t\t;\n\t\t\t}\n\t\t},\n\t\t\n\t\tevents   : {\n\t\t\t\n\t\t\tnoticeClick : function(event) {\n\t\t\t\tvar $this = $(this);\n\t\t\t\t\n\t\t\t\t// Make sure we don't hijack and link clicks.\n\t\t\t\tif ($(this.toElement).is('[href]'))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Fade out and remove the notice very quickly after clicking it.\n\t\t\t\t$this.fadeOut(250, function() {\n\t\t\t\t\t$this.remove();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t},\n\t\t\n\t\tbuild    : {\n\t\t\t\n\t\t},\n\t\t\n\t\tclear    : function() {\n\t\t\twidget.$widget.children().remove();\n\t\t},\n\t\t\n\t\tpush     : function(message, messageType) {\n\t\t\tif (widget.options === false) {\n\t\t\t\twidget.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar $message;\n\t\t\tvar className = \"message\";\n\t\t\t\n\t\t\tif (widget.options.template['message-'+messageType] !== undefined)\n\t\t\t{\n\t\t\t\tclassName = 'message-'+messageType;\n\t\t\t}\n\t\t\t\n\t\t\t$message = $(widget.options.template[className]);\n\t\t\t$message.append(message).appendTo(widget.$widget);\n\t\t\t\n\t\t\t// Scroll our window up to meet the notification if required.\n\t\t\tif ($message.offsetParent().css('position') !== \"fixed\")\n\t\t\t{\n\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\tscrollTop : $message.offset().top - $(\".board-header\").height() - 10\n\t\t\t\t\t},\n\t\t\t\t\t250\n\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\t\treturn $message;\n\t\t}\n\t\t\n\t};\n\t\n\treturn widget;\n});\n","// ============================================================\n// Purpose                      : Permission Sheets\n// Contributors                 : jaw-sh\n// ============================================================\n\nib.widget(\"permissions\", function(window, $, undefined) {\n\tvar widget = {\n\t\t\n\t\tdefaults : {\n\t\t\tselector : {\n\t\t\t\t\n\t\t\t}\n\t\t},\n\t\t\n\t\t// Events\n\t\tevents   : {\n\t\t\t\n\t\t},\n\t\t\n\t\t// Event bindings\n\t\tbind     : {\n\t\t\twidget : function() {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t};\n\t\n\treturn widget;\n});\n\n","// ===========================================================================\n// Purpose          : Posts\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n    // Widget blueprint\n    var blueprint = ib.getBlueprint();\n\n    var events = {\n        doContentUpdate : function(event) {\n            // On setting update, trigger reformating..\n            var setting = event.data.setting;\n            var widget  = setting.widget;\n            ib.getInstances(widget).trigger('contentUpdate');\n        }\n    };\n\n    // Configuration options\n    var options = {\n        author_id : {\n            type : \"bool\",\n            initial : true,\n            onChange : events.doContentUpdate,\n            onUpdate : events.doContentUpdate\n        },\n        attachment_preview : {\n            type : \"bool\",\n            initial : true\n        }\n    };\n\n    blueprint.prototype.defaults = {\n        preview_delay : 200,\n\n        // Important class names.\n        classname : {\n            'post-hover'  : \"post-hover\",\n            'cite-you'    : \"cite-you\",\n            'tabs-open'   : \"open\"\n        },\n\n        // Selectors for finding and binding elements.\n        selector : {\n            'widget'         : \".post-container\",\n\n            'hover-box'      : \"#attachment-preview\",\n            'hover-box-img'  : \"#attachment-preview-img\",\n\n            'mode-reply'     : \"main.mode-reply\",\n            'mode-index'     : \"main.mode-index\",\n\n            'post-reply'     : \".post-reply\",\n\n            'element-code'   : \"pre code\",\n            'element-quote'  : \"blockquote\",\n\n            'action-tab'     : \"div.post-action-tab\",\n            'action-tabs'    : \"ul.post-action-groups\",\n\n            'author'         : \".author\",\n            'author_id'      : \".authorid\",\n\n            'cite-slot'      : \"li.detail-cites\",\n            'cite'           : \"a.cite-post\",\n            'backlinks'      : \"a.cite-backlink\",\n            'forwardlink'    : \"blockquote.post a.cite-post\",\n\n            'post-form'      : \"#post-form\",\n            'post-form-body' : \"#body\",\n\n            'attachment'         : \"li.post-attachment\",\n            'attacment-expand'   : \"li.post-attachment:not(.attachment-expanded) a.attachment-link\",\n            'attacment-collapse' : \"li.post-attachment.attachment-expanded a.attachment-link\",\n            'attachment-media'   : \"audio.attachment-inline, video.attachment-inline\",\n            'attachment-image'   : \"img.attachment-img\",\n            'attachment-image-download'   : \"img.attachment-type-file\",\n            'attachment-image-expandable' : \"img.attachment-type-img\",\n            'attachment-image-audio'      : \"img.attachment-type-audio\",\n            'attachment-image-video'      : \"img.attachment-type-video\",\n            'attachment-inline'  : \"audio.attachment-inline, video.attachment-inline\",\n            'attachment-link'    : \"a.attachment-link\"\n        },\n\n        // HTML Templates\n        template : {\n            'backlink' : \"<a class=\\\"cite cite-post cite-backlink\\\"></a>\"\n        }\n    };\n\n    // The temporary hover-over item created to show backlink posts.\n    blueprint.prototype.$cite    = null;\n    blueprint.prototype.citeLoad = null;\n\n    // Takes an element and positions it near a backlink.\n    blueprint.prototype.anchorBoxToLink = function($box, $link) {\n        var bodyWidth = document.body.scrollWidth;\n\n        var linkRect  = $link[0].getBoundingClientRect();\n\n        $(this.options.classname['post-hover']).remove();\n\n        if (!$box.parents().length)\n        {\n            $box.appendTo(\"body\")\n                .addClass(this.options.classname['post-hover'])\n                .css('position', \"absolute\");\n            ib.bindAll($box);\n        }\n\n        var boxHeight = $box.outerHeight();\n        var boxWidth  = $box.outerWidth();\n\n        var posTop  = linkRect.top + window.scrollY;\n\n        // Is the box's bottom below the bottom of the screen?\n        if (posTop + boxHeight + 25 > window.scrollY + window.innerHeight)\n        {\n            // Selects the larger of two values:\n            // A) Our position in the scroll, or\n            // B) The hidden part of the post subtracted from the top.\n            // This check will try to keep the entire post visible,\n            // but will always keep the top of the post visible.\n            var posTopDiff = (posTop + boxHeight + 25) - (window.scrollY + window.innerHeight);\n            posTop = Math.max( window.scrollY, posTop - posTopDiff );\n        }\n\n\n        // Float to the right.\n        // Default for LTR\n        var posLeft;\n        var posLeftOnRight = linkRect.right + 5;\n        var posLeftOnLeft  = linkRect.left  - 5;\n        var maxWidth       = (document.body.scrollWidth * 0.7) - 15;\n        var newWidth;\n\n        // LTR display\n        if (ib.ltr)\n        {\n            // Left side has more space than right side,\n            // and box is wider than remaining space.\n            if (linkRect.left > document.body.scrollWidth - posLeftOnRight\n                && boxWidth > document.body.scrollWidth - posLeftOnRight)\n            {\n                posLeft  = posLeftOnLeft;\n                newWidth = Math.min(maxWidth, boxWidth, linkRect.left - 15);\n                posLeft -= newWidth;\n            }\n            // Right side has more adequate room,\n            // Or box fits in.\n            else\n            {\n                posLeft  = posLeftOnRight;\n                newWidth = Math.min(\n                    maxWidth,\n                    boxWidth,\n                    document.body.scrollWidth - posLeftOnRight  - 15\n                );\n            }\n        }\n        // RTL Display\n        else\n        {\n            // TODO\n        }\n\n        $box.css({\n            'top'       : posTop,\n            'left'      : posLeft,\n            'width'     : newWidth,\n        });\n\n        this.$cite = $box;\n    };\n\n    // Includes (You) classes on posts that we think we own.\n    blueprint.prototype.addAuthorship = function() {\n        var widget = this;\n        var cites  = [];\n\n        // Loop through each citation.\n        $(this.options.selector['cite'], this.$widget).each(function() {\n            var board = this.dataset.board_uri;\n            var post  = this.dataset.board_id.toString();\n\n            // Check and see if we have an item for this citation's board.\n            if (typeof cites[board] === \"undefined\")\n            {\n                if (localStorage.getItem(\"yourPosts.\"+board) !== null)\n                {\n                    cites[board] = localStorage.getItem(\"yourPosts.\"+board).split(\",\");\n                }\n                else\n                {\n                    cites[board] = [];\n                }\n            }\n\n            if (cites[board].length > 0 && cites[board].indexOf(post) >= 0)\n            {\n                this.className += \" \" + widget.options.classname['cite-you'];\n            }\n        });\n\n        (function() {\n            var board = widget.$widget[0].dataset.board_uri;\n            var post  = widget.$widget[0].dataset.board_id.toString();\n            var posts = localStorage.getItem(\"yourPosts.\"+board);\n\n            if (posts !== null && posts.split(\",\").indexOf(post) > 0)\n            {\n                widget.$widget[0].className += \" post-you\";\n            }\n        })();\n    };\n\n    // Event bindings\n    blueprint.prototype.bind = function() {\n        var widget  = this;\n        var $widget = this.$widget;\n        var data    = {\n            widget  : widget,\n            $widget : $widget\n        };\n\n        $(window)\n            .on(\n                'au-updated.ib-post',\n                data,\n                widget.events.threadNewPosts\n            )\n            .on(\n                'resize',\n                data,\n                widget.events.windowResize\n            );\n\n        $widget\n            .on(\n                'contentUpdate.ib-post',\n                data,\n                widget.events.postContentUpdate\n            )\n            .on(\n                'highlight-syntax.ib-post',\n                data,\n                widget.events.codeHighlight\n            )\n            .on(\n                'click.ib-post',\n                widget.options.selector['post-reply'],\n                data,\n                widget.events.postClick\n            )\n            .on(\n                'click.ib-post',\n                widget.options.selector['action-tab'],\n                data,\n                widget.events.actionTabClick\n            )\n            .on(\n                'mouseover.ib-post',\n                widget.options.selector['attachment-image-expandable'],\n                data,\n                widget.events.attachmentMediaMouseOver\n            )\n            .on(\n                'mouseout.ib-post',\n                widget.options.selector['attachment-image-expandable'],\n                data,\n                widget.events.attachmentMediaMouseOut\n            )\n            .on(\n                'media-check.ib-post',\n                widget.options.selector['attachment-image'],\n                data,\n                widget.events.attachmentMediaCheck\n            )\n            .on(\n                'click.ib-post',\n                widget.options.selector['attacment-expand'],\n                data,\n                widget.events.attachmentExpandClick\n            )\n            .on(\n                'click.ib-post',\n                widget.options.selector['attacment-collapse'],\n                data,\n                widget.events.attachmentCollapseClick\n            )\n\n            // Citations\n            .on(\n                'click.ib-post',\n                widget.options.selector['cite'],\n                data,\n                widget.events.citeClick\n            )\n            .on(\n                'mouseover.ib-post',\n                widget.options.selector['cite'],\n                data,\n                widget.events.citeMouseOver\n            )\n            .on(\n                'mouseout.ib-post',\n                widget.options.selector['cite'],\n                data,\n                widget.events.citeMouseOut\n            )\n        ;\n\n        $widget.trigger('contentUpdate');\n        widget.scaleThumbnails();\n        widget.cachePosts($widget);\n    };\n\n    blueprint.prototype.bindMediaEvents = function($element) {\n        var data = {\n            widget  : this,\n            $widget : this.$widget\n        };\n\n        $element.on(\n            'ended.ib-post',\n            data,\n            this.events.attachmentMediaEnded\n        );\n    };\n\n    // Stores a post in the session store.\n    blueprint.prototype.cachePosts = function(jsonOrjQuery) {\n        // This stores the post data into a session storage for fast loading.\n        if (typeof sessionStorage === \"object\")\n        {\n            var $post;\n\n            if (jsonOrjQuery instanceof jQuery)\n            {\n                $post = jsonOrjQuery;\n            }\n            else if (jsonOrjQuery.html)\n            {\n                var $post = $(jsonOrjQuery.html);\n            }\n\n            // We do this even with an item we pulled from AJAX to remove the ID.\n            // The HTML dom cannot have duplicate IDs, ever. It's important.\n            var $post = $($post[0].outerHTML); // Can't use .clone()\n\n            if (typeof $post[0] !== \"undefined\")\n            {\n                var id    = $post[0].id;\n                $post.removeAttr('id');\n                var html = $post[0].outerHTML;\n\n                // Attempt to set a new storage item.\n                // Destroy older items if we are full.\n                var setting = true;\n\n                while (setting === true)\n                {\n                    try\n                    {\n                        sessionStorage.setItem( id, html );\n                        break;\n                    }\n                    catch (e)\n                    {\n                        if (sessionStorage.length > 0)\n                        {\n                            sessionStorage.removeItem( sessionStorage.key(0) );\n                        }\n                        else\n                        {\n                            setting = false;\n                        }\n                    }\n                }\n\n                return $post;\n            }\n        }\n\n        return null;\n    };\n\n    // Clears existing hover-over divs created by anchorBoxToLink.\n    blueprint.prototype.clearCites = function() {\n        if (this.$cite instanceof jQuery)\n        {\n            this.$cite.remove();\n        }\n\n        $(\".\"+this.options.classname['post-hover']).remove();\n\n        this.$cite    = null;\n        this.citeLoad = null;\n    };\n\n    // Scales thumbnails down based on resolution.\n    blueprint.prototype.scaleThumbnails = function() {\n        if ($(\"body\").is(\".responsive\")) {\n            var $widget = this.$widget;\n\n            $(this.options.selector['attachment-image'], $widget).each(function()\n            {\n                var $img = $(this);\n                var $box = $img.parent();\n                var width, height;\n\n                if (!(width = $img.data('original-width'))) {\n                    width = $img.width();\n                    $img.data('original-width', width);\n                }\n                if (!(height = $img.data('original-height'))) {\n                    height = $img.height();\n                    $img.data('original-height', height);\n                }\n\n                // We want a number between 320 and 1440, minus 320.\n                // Used to get a value between 0 and 0.5.\n                var factor = Math.min(Math.max(window.innerWidth, 320), 1440) - 320;\n                var percentage = (factor / (1440 - 320) / 2) + 0.5;\n\n                console.log(factor, percentage);\n                var newWidth = Math.floor(width * percentage);\n                var newHeight = Math.floor(height * percentage);\n\n                $img.add($box).css({\n                    'height' : newHeight,\n                    'width'  : newWidth,\n                });\n            });\n        }\n    };\n\n    // Events\n    blueprint.prototype.events = {\n        actionTabClick : function(event) {\n            var widget  = event.data.widget;\n            var $this   = $(this);\n            var $target = $(event.target);\n\n            // Make sure we're not actually in the menu.\n            if ($target.parents(widget.options.selector['action-tabs']).length) {\n                return true;\n            }\n\n            // Toggle all tabs off.\n            $(widget.options.selector['action-tab'] + \".\" + widget.options.classname['tabs-open'])\n                .not($this)\n                .toggleClass(widget.options.classname['tabs-open']);\n\n            $(this).toggleClass(widget.options.classname['tabs-open']);\n\n            event.preventDefault();\n            return false;\n        },\n\n        attachmentCollapseClick : function(event) {\n            var widget  = event.data.widget;\n            var $link   = $(this);\n            var $item   = $link.parents(\"li.post-attachment\");\n            var $img    = $(widget.options.selector['attachment-image'], $item);\n            var $inline = $(widget.options.selector['attachment-inline'], $item);\n\n            if ($inline.length > 0)\n            {\n                $(\"[src]\", $item).attr('src', \"\");\n                $inline[0].pause(0);\n                $inline[0].src = \"\";\n                $inline[0].load();\n            }\n\n            if ($img.is('[data-thumb-width]'))\n            {\n                $img.css('width', $img.attr('data-thumb-width') + \"px\");\n            }\n\n            if ($img.is('[data-thumb-height]'))\n            {\n                $img.css('height', $img.attr('data-thumb-height') + \"px\");\n            }\n\n            $item.removeClass('attachment-expanded');\n            $img.attr('src', $link.attr('data-thumb-url'));\n            $inline.remove();\n            $img.toggle(true);\n            $img.parent().css({\n                'background-image' : 'none',\n                'min-width'        : '',\n                'min-height'       : '',\n            });\n\n            if (event.delegateTarget === widget.$widget[0])\n            {\n                widget.$widget[0].scrollIntoView({\n                    block    : \"start\",\n                    behavior : \"instant\"\n                });\n            }\n\n            event.preventDefault();\n            return false;\n        },\n\n        attachmentMediaCheck : function(event) {\n            var widget = event.data.widget;\n            var $img   = $(this);\n            var $link  = $img.parents(widget.options.selector['attachment-link']).first();\n\n            // Check for previous results.\n            if ($link.is(\".attachment-canplay\"))\n            {\n                return true;\n            }\n            else if ($link.is(\".attachment-cannotplay\"))\n            {\n                return false;\n            }\n\n            // Test audio.\n            if ($img.is(widget.options.selector['attachment-image-audio']))\n            {\n                var $audio  = $(\"<audio></audio>\");\n                var mimetype = $img.attr('data-mime');\n                var fileext  = $link.attr('href').split('.').pop();\n\n                if ($audio[0].canPlayType(mimetype) != \"\" || $audio[0].canPlayType(\"audio/\"+fileext) != \"\")\n                {\n                    $link.addClass(\"attachment-canplay\");\n                    return true;\n                }\n            }\n            // Test video.\n            else if ($img.is(widget.options.selector['attachment-image-video']))\n            {\n                var $video   = $(\"<video></video>\");\n                var mimetype = $img.attr('data-mime');\n                var fileext  = $link.attr('href').split('.').pop();\n\n                if ($video[0].canPlayType(mimetype) || $video[0].canPlayType(\"video/\"+fileext))\n                {\n                    $link.addClass(\"attachment-canplay\");\n                    return true;\n                }\n            }\n            else\n            {\n                $link.addClass(\"attachment-canplay\");\n                return true;\n            }\n\n            // Add failure results.\n            $link.addClass('attachment-cannotplay');\n\n            $img\n                .addClass('attachment-type-file')\n                .removeClass('attachment-type-video attachment-type-audio');\n\n            return false;\n        },\n\n        attachmentMediaEnded : function(event) {\n            var widget  = event.data.widget;\n            var $media  = $(this);\n            var $item   = $media.parents(\"li.post-attachment\");\n            var $link   = $(widget.options.selector['attachment-link'], $item);\n            var $img    = $(widget.options.selector['attachment-image'], $item);\n            var $inline = $(widget.options.selector['attachment-inline'], $item);\n\n            $item.removeClass('attachment-expanded');\n            $img.attr('src', $link.attr('data-thumb-url'));\n            $inline.remove();\n            $img.toggle(true);\n            $img.parent().addClass('attachment-grow');\n        },\n\n        attachmentMediaMouseOver : function(event) {\n            var widget   = event.data.widget;\n\n            if (!widget.is('attachment_preview') || ib.isMobile()) {\n                return true;\n            }\n\n            var $img     = $(this);\n            var $link    = $img.parents(widget.options.selector['attachment-link']).first();\n            var $preview = $(widget.options.selector['hover-box']);\n\n            $preview.children().attr('src', $link.attr('data-download-url'));\n\n            widget.previewTimer = setTimeout(function() {\n                $preview.show();\n            }, widget.options.preview_delay);\n        },\n\n        attachmentMediaMouseOut : function(event) {\n            var widget   = event.data.widget;\n            var $img     = $(this);\n            var $link    = $img.parents(widget.options.selector['attachment-link']).first();\n            var $preview = $(widget.options.selector['hover-box']);\n\n            $preview.children().attr('src', \"\");\n            $preview.hide();\n            clearTimeout(widget.previewTimer);\n        },\n\n        attachmentExpandClick : function(event) {\n            var widget = event.data.widget;\n            var $link  = $(this);\n            var $item  = $link.parents(\"li.post-attachment\");\n            var $img   = $(widget.options.selector['attachment-image'], $link);\n\n            // We don't do anything if the user is CTRL+Clicking,\n            // or if the file is a download type.\n            if (event.altKey || event.ctrlKey || $img.is(widget.options.selector['attachment-image-download']))\n            {\n                return true;\n            }\n\n            // If the attachment type is not an image, we can't expand inline.\n            if ($img.is(widget.options.selector['attachment-image-expandable']))\n            {\n                $item.addClass('attachment-expanded');\n                $img.parent().css({\n                        // Removed because the effect was gross.\n                        // 'background-image'    : 'url(' + $link.attr('data-thumb-url') + ')',\n                        // 'background-size'     : '100%',\n                        // 'background-repeat'   : 'no-repeat',\n                        // 'background-position' : 'center center',\n                        'min-width'           : $img.width() + 'px',\n                        'min-height'          : $img.height() + 'px',\n                        'height'              : \"auto\",\n                        'width'               : \"auto\",\n                        'opacity'             : 0.5,\n                    });\n\n                // Clear source first so that lodaing works correctly.\n                $img\n                    .attr('data-thumb-width', $img.width())\n                    .attr('data-thumb-height', $img.height())\n                    .attr('src', \"\")\n                    .css({\n                        'width'  : \"auto\",\n                        'height' : \"auto\"\n                    });\n\n                $img\n                    // Change the source of our thumb to the full image.\n                    .attr('src', $link.attr('data-download-url'))\n                    // Bind an event to handle the image loading.\n                    .one(\"load\", function() {\n                        // Remove our opacity change.\n                        $(this).parent().css({\n                            // 'background-image' : \"none\",\n                            // 'min-width'        : '',\n                            // 'min-height'       : '',\n                            'opacity'          : \"\"\n                        });\n                    });\n\n                event.preventDefault();\n                return false;\n            }\n            else if ($img.is(widget.options.selector['attachment-image-audio']))\n            {\n                var $audio  = $(\"<audio controls autoplay class=\\\"attachment-inline attachment-audio\\\"></audio>\");\n                var $source = $(\"<source />\");\n                var mimetype = $img.attr('data-mime');\n                var fileext  = $link.attr('href').split('.').pop();\n\n                if ($audio[0].canPlayType(mimetype) || $audio[0].canPlayType(\"audio/\"+fileext))\n                {\n                    $item.addClass('attachment-expanded');\n\n                    $source\n                        .attr('src',  $link.attr('href'))\n                        .attr('type', $img.attr('data-mime'))\n                        .one('error', function(event) {\n                            // Our source has failed to load!\n                            // Trigger a download.\n                            $img\n                                .trigger('click')\n                                .removeClass('attachment-type-audio')\n                                .addClass('attachment-type-file');\n                        })\n                        .appendTo($audio);\n\n                    $audio.insertBefore($link);\n                    widget.bindMediaEvents($audio);\n\n                    $audio.parent().addClass('attachment-grow');\n\n                    event.preventDefault();\n                    return false;\n                }\n            }\n            else if ($img.is(widget.options.selector['attachment-image-video']))\n            {\n                var $video   = $(\"<video controls autoplay class=\\\"attachment-inline attachment-video\\\"></video>\");\n                var $source  = $(\"<source />\");\n                var mimetype = $img.attr('data-mime');\n                var fileext  = $link.attr('href').split('.').pop();\n\n                if ($video[0].canPlayType(mimetype) || $video[0].canPlayType(\"video/\"+fileext))\n                {\n                    $item.addClass('attachment-expanded');\n\n                    $source\n                        .attr('src',  $link.attr('href'))\n                        .attr('type', $img.attr('data-mime'))\n                        .one('error', function(event) {\n                            // Our source has failed to load!\n                            // Trigger a download.\n                            $img\n                                .trigger('click')\n                                .removeClass('attachment-type-video')\n                                .addClass('attachment-type-download attachment-type-failed');\n                        })\n                        .appendTo($video);\n\n                    $img.toggle(false);\n\n                    widget.bindMediaEvents($video);\n                    $video.insertBefore($link);\n\n                    event.preventDefault();\n                    return false;\n                }\n                else\n                {\n                    $img\n                        .addClass('attachment-type-file')\n                        .removeClass('attachment-type-video');\n\n                    return true;\n                }\n            }\n            else\n            {\n                return true;\n            }\n        },\n\n        citeClick : function(event) {\n            if (event.altKey || event.ctrlKey)\n            {\n                return true;\n            }\n\n            var $cite     = $(this);\n            var board_uri = $cite.attr('data-board_uri');\n            var board_id  = parseInt($cite.attr('data-board_id'), 10);\n            var $target   = $(\"#post-\"+board_uri+\"-\"+board_id);\n\n            if ($target.length)\n            {\n                window.location.hash = board_id;\n                $target[0].scrollIntoView();\n\n                event.preventDefault();\n                return false;\n            }\n        },\n\n        citeMouseOver : function(event) {\n            var widget    = event.data.widget;\n            var $cite     = $(this);\n            var board_uri = $cite.attr('data-board_uri');\n            var board_id  = parseInt($cite.attr('data-board_id'), 10);\n            var post_id   = \"post-\"+board_uri+\"-\"+board_id;\n            var $post;\n\n            // Prevent InstantClick hijacking requests we can handle without\n            // reloading the document.\n            if ($(\"#\"+post_id).length)\n            {\n                $cite.attr('data-no-instant', \"data-no-instant\");\n            }\n            else\n            {\n                $cite.removeAttr('data-no-instant');\n            }\n\n            widget.clearCites();\n\n            if (widget.citeLoad == post_id)\n            {\n                return true;\n            }\n\n            // Loads session storage for our post if it exists.\n            if (typeof sessionStorage === \"object\")\n            {\n                $post = $(sessionStorage.getItem( post_id ));\n\n                if ($post instanceof jQuery && $post.length)\n                {\n                    widget.anchorBoxToLink($post, $cite);\n                    return true;\n                }\n            }\n\n            widget.citeLoad = post_id;\n\n            jQuery.ajax({\n                type:        \"GET\",\n                url:         \"/\"+board_uri+\"/post/\"+board_id+\".json\",\n                contentType: \"application/json; charset=utf-8\"\n            }).done(function(response, textStatus, jqXHR) {\n                $post = widget.cachePosts(response);\n\n                if (widget.citeLoad === post_id)\n                {\n                    widget.anchorBoxToLink($post, $cite);\n                }\n            });\n        },\n\n        citeMouseOut : function(event) {\n            event.data.widget.clearCites();\n        },\n\n        // Adds HLJS syntax formatting to posts.\n        codeHighlight : function(event) {\n            var widget  = event.data.widget;\n            var $widget =  event.data.$widget;\n\n            // Activate code highlighting if the JS module is enabled.\n            if (typeof window.hljs === \"object\")\n            {\n                $(widget.options.selector['element-code'], $widget).each(function()\n                {\n                    window.hljs.highlightBlock(this);\n                });\n            }\n            else\n            {\n                console.log(\"post.codeHighlight: missing hljs\");\n            }\n        },\n\n        postClick : function(event) {\n            var widget = event.data.widget;\n\n            if ($(widget.options.selector['mode-reply']).length !== 0)\n            {\n                event.preventDefault();\n\n                var $this = $(this);\n                var $body = $(widget.options.selector['post-form-body']);\n                var $postbox = $(widget.options.selector['post-form']);\n                var postboxWidget = $postbox[0].widget;\n                var selectedText = ib.getSelectedText();\n\n                if (selectedText != \"\") {\n                    selectedText = \">\" + selectedText.trim().split(\"\\n\").join(\"\\n>\") + \"\\n\";\n                }\n\n                // Focusing the textarea automatically scrolls the window.\n                // Correct that.\n                var x = window.scrollX;\n                var y = window.scrollY;\n\n                postboxWidget.replaceBodySelection(\">>\" + $this.data('board_id') + \"\\n\" + selectedText);\n                postboxWidget.responsiveAnchor(widget.$widget[0]);\n\n                window.scrollTo(x, y);\n\n                return false;\n            }\n\n            return true;\n        },\n\n        postContentUpdate : function(event) {\n            var widget  = event.data.widget;\n            var $widget =  event.data.$widget;\n\n            $(widget.options.selector.author_id, $widget)\n                .toggle(widget.is('author_id'));\n\n            widget.addAuthorship();\n            $widget.trigger('highlight-syntax');\n        },\n\n        threadNewPosts : function(event, posts) {\n            // Data of our widget, the item we are hoping to insert new citations into.\n            var widget           = event.data.widget;\n            var $detail          = $(widget.options.selector['cite-slot'], widget.$widget);\n            var $backlinks       = $detail.children();\n            var backlinks        = 0;\n            var widget_board_uri = widget.$widget.attr('data-board_uri');\n            var widget_board_id  = widget.$widget.attr('data-board_id');\n\n            // All new updates show off their posts in three difeferent groups.\n            jQuery.each(posts, function(index, group) {\n                // Each group can have many jQuery dom elements.\n                jQuery.each(group, function(index, $post) {\n                    // This information belongs to a new post.\n                    var post_board_uri = $post.attr('data-board_uri');\n                    var post_board_id  = $post.attr('data-board_id');\n                    var $cites         = $(widget.options.selector['forwardlink'], $post);\n\n                    // Each post may have many citations.\n                    $cites.each(function(index) {\n                        // This information represents the post we are citing.\n                        var $cite          = $(this);\n                        var cite_board_uri = $cite.attr('data-board_uri');\n                        var cite_board_id  = $cite.attr('data-board_id');\n\n                        // If it doesn't belong to our widget, we don't want it.\n                        if (cite_board_uri == widget_board_uri && cite_board_id == widget_board_id)\n                        {\n                            var $target    = $(\"#post-\" + cite_board_uri + \"-\" + post_board_id);\n\n                            if (!$backlinks.filter(\"[data-board_uri=\"+post_board_uri+\"][data-board_id=\"+post_board_id+\"]\").length)\n                            {\n                                var $backlink = $(widget.options.template['backlink'])\n                                    .attr('data-board_uri', post_board_uri)\n                                    .data('board_uri', post_board_uri)\n                                    .attr('data-board_id', post_board_id)\n                                    .data('board_id', post_board_id)\n                                    .attr('href', \"/\" + post_board_uri + \"/post/\" + post_board_id)\n                                    .appendTo($detail);\n\n                                $backlinks = $backlinks.add($backlink);\n                                ++backlinks;\n\n                                // Believe it or not this is actually important.\n                                // it adds a space after each item.\n                                $detail.append(\"\\n\");\n\n                                if (post_board_uri == window.app.board)\n                                {\n                                    $backlink.addClass('cite-local').html(\"&gt;&gt;\" + post_board_id);\n                                }\n                                else\n                                {\n                                    $backlink.addClass('cite-remote').html(\"&gt;&gt;&gt;/\" + post_board_uri + \"/\" + post_board_id);\n                                }\n                            }\n                        }\n                    });\n                });\n            });\n\n            if (backlinks)\n            {\n                widget.addAuthorship();\n            }\n        },\n\n        windowResize : function(event) {\n            event.data.widget.scaleThumbnails();\n        }\n    };\n\n    ib.widget(\"post\", blueprint, options);\n})(window, window.jQuery);\n","// ===========================================================================\n// Purpose          : Posts\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n    // Widget blueprint\n    var blueprint = ib.getBlueprint();\n\n    var options = {\n        password : {\n            type : \"text\",\n            initial : ib.randomString(8),\n        }\n    };\n\n    // Dropzone instance.\n    blueprint.prototype.dropzone = null;\n\n        // jQuery UI bind indicators\n    blueprint.prototype.resizable = false;\n    blueprint.prototype.draggable = false;\n    blueprint.prototype.axis      = ib.ltr ? \"sw\" : \"se\";\n\n    // Other widget instances.\n    blueprint.prototype.notices = null;\n\n    // Number of uploads running.\n    // Used to prevent premature form submission.\n    blueprint.prototype.activeUploads = 0;\n\n    // The default values that are set behind init values.\n    blueprint.prototype.defaults = {\n        checkFileUrl  : window.app.board_url + \"/check-file\",\n\n        // Selectors for finding and binding elements.\n        selector : {\n            'widget'          : \"#post-form\",\n            'notices'         : \"[data-widget=notice]:first\",\n            'autoupdater'     : \".autoupdater:first\",\n\n            'form-open'       : \".post-form-open\",\n\n            'dropzone'        : \".dz-container\",\n\n            'submit-post'     : \"#submit-post\",\n\n            // This is the main postbox password.\n            'password'        : \"#password\",\n            // This is any field that uses the same password.\n            'post-password'   : \".post-password\",\n\n            'form-fields'     : \".form-fields\",\n            'form-body'       : \"#body\",\n            'form-clear'      : \"#subject, #body, #captcha\",\n            'form-spoiler'    : \".dz-spoiler-check\",\n\n            'captcha'         : \".captcha\",\n            'captcha-row'     : \".row-captcha\",\n            'captcha-field'   : \".field-control\",\n\n            'button-close'    : \".menu-icon-close\",\n            'button-maximize' : \".menu-icon-maximize\",\n            'button-minimize' : \".menu-icon-minimize\"\n        },\n\n        template : {\n            'counter'         : \"<tt id=\\\"body-counter\\\"></tt>\",\n        },\n\n        dropzone : {\n            // Localization strings.\n            // dictDefaultMessage: \"Drop files here to upload\",\n            // dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n            // dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n            // dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n            // dictInvalidFileType: \"You can't upload files of this type.\",\n            // dictResponseError: \"Server responded with {{statusCode}} code.\",\n            // dictCancelUpload: \"Cancel upload\",\n            // dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n            // dictRemoveFile: \"Remove file\",\n            // dictRemoveFileConfirmation: null,\n            // dictMaxFilesExceeded: \"You can not upload any more files.\",\n\n            // The input field name.\n            paramName      : \"files\",\n\n            // File upload URL\n            url            : window.app.board_url + \"/upload-file\",\n\n            // Allow multiple uploads.\n            uploadMultiple : true,\n\n            // Maximum filesize (MB)\n            maxFilesize    : window.app.settings.attachmentFilesize / 1024,\n\n            // Binds the instance to our widget.\n            init: function() {\n                var widget = this.options.widget;\n\n                widget.dropzone = this;\n                this.widget     = widget;\n                this.$widget    = widget.$widget;\n\n                $(this.element).append(\"<input type=\\\"hidden\\\" name=\\\"dropzone\\\" value=\\\"1\\\" />\");\n            },\n\n            // Handles the acceptance of files.\n            accept : function(file, done) {\n                var widget  = this.widget;\n                var $widget = this.$widget;\n                var reader  = new FileReader();\n\n                widget.$widget.trigger('fileUploading', [ file ]);\n\n                reader.onload = function (event) {\n                    var Hasher = new SparkMD5;\n                    Hasher.appendBinary(this.result);\n\n                    var hash = Hasher.end();\n                    file.hash = hash;\n\n                    jQuery.get( widget.options.checkFileUrl, {\n                        'md5' : hash\n                    })\n                        .done(function(data, textStatus, jqXHR) {\n                            if (typeof data === \"object\")\n                            {\n                                var response = data;\n\n                                jQuery.each(response, function(index, datum) {\n                                    // Make sure this datum is for our file.\n                                    if (index !== hash)\n                                    {\n                                        return true;\n                                    }\n\n                                    // Does this file exist?\n                                    if (datum !== null)\n                                    {\n                                        // Is the file banned?\n                                        if (datum.banned == 1)\n                                        {\n                                            // Language\n                                            console.log(\"File \"+file.name+\" is banned from being uploaded.\");\n\n                                            file.status = Dropzone.ERROR;\n                                            widget.dropzone.emit(\"error\", file, \"File <tt>\"+file.name+\"</tt> is banned from being uploaded\", jqXHR);\n                                            widget.dropzone.emit(\"complete\", file);\n                                        }\n                                        else\n                                        {\n                                            console.log(\"File \"+file.name+\" already exists.\");\n\n                                            file.status = window.Dropzone.SUCCESS;\n                                            widget.dropzone.emit(\"success\", file, datum, jqXHR);\n                                            widget.dropzone.emit(\"complete\", file);\n                                        }\n                                    }\n                                    // If no presence, upload anew.\n                                    else\n                                    {\n                                        console.log(\"Uploading file \"+file.name+\".\");\n\n                                        done();\n                                    }\n                                });\n                            }\n                            else\n                            {\n                                console.log(\"Received weird response:\", data);\n                            }\n                        });\n                };\n\n                reader.readAsBinaryString(file);\n            },\n\n            canceled : function(file) {\n                var $widget = this.$widget;\n                $widget.trigger('fileCanceled', [ file ]);\n            },\n\n            error : function(file, message, xhr) {\n                var widget  = this.widget;\n                var $widget = this.$widget;\n\n                widget.notices.push(message, 'error');\n\n                $(file.previewElement).remove();\n\n                $widget.trigger('fileFailed', [ file ]);\n            },\n\n            removedfile : function(file) {\n                var widget = this.widget;\n                var _ref;\n\n                if (file.previewElement) {\n                    if ((_ref = file.previewElement) != null) {\n                        _ref.parentNode.removeChild(file.previewElement);\n                    }\n                }\n\n                widget.resizePostbox();\n\n                return this._updateMaxFilesReachedClass();\n            },\n\n            success : function(file, response, xhr) {\n                var widget  = this.widget;\n                var $widget = this.$widget;\n\n                if (typeof response !== \"object\")\n                {\n                    var response = jQuery.parseJSON(response);\n                }\n\n                if (typeof response.errors !== \"undefined\")\n                {\n                    jQuery.each(response.errors, function(field, errors)\n                    {\n                        jQuery.each(errors, function(index, error)\n                        {\n                            widget.dropzone.emit(\"error\", file, error, xhr);\n                            widget.dropzone.emit(\"complete\", file);\n                        });\n                    });\n                }\n                else\n                {\n                    var $preview = $(file.previewElement);\n\n                    $preview\n                        .addClass('dz-success')\n                        .append($(\"<input type=\\\"hidden\\\" />\").attr('name', widget.options.dropzone.paramName+\"[hash][]\").val(file.hash))\n                        .append($(\"<input type=\\\"hidden\\\" />\").attr('name', widget.options.dropzone.paramName+\"[name][]\").val(file.name))\n                    ;\n\n                    $(\"[data-dz-spoiler]\", $preview)\n                        .attr('name', widget.options.dropzone.paramName+\"[spoiler][]\");\n                }\n\n                $widget.trigger('fileUploaded', [ file ]);\n            },\n\n            previewTemplate :\n                \"<div class=\\\"dz-preview dz-file-preview\\\">\" +\n                    \"<div class=\\\"dz-image\\\">\" +\n                        \"<img data-dz-thumbnail />\" +\n                    \"</div>\" +\n                    \"<div class=\\\"dz-actions\\\">\" +\n                        \"<span class=\\\"dz-remove\\\" data-dz-remove>x</span>\" +\n                        \"<label class=\\\"dz-spoiler\\\">\" +\n                            \"<input type=\\\"checkbox\\\" class=\\\"dz-spoiler-check\\\" name=\\\"\\\" value=\\\"\\\" />\" +\n                            \"<input type=\\\"chidden\\\" class=\\\"dz-spoiler-hidden\\\" value=\\\"0\\\" data-dz-spoiler />\" +\n                            \"<span class=\\\"dz-spoiler-desc\\\">Spoiler</span>\" +\n                        \"</label>\" +\n                    \"</div>\" +\n                    \"<div class=\\\"dz-details\\\">\" +\n                        \"<div class=\\\"dz-size\\\"><span data-dz-size></span></div>\" +\n                        \"<div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\" +\n                    \"</div>\" +\n                    \"<div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\" +\n                    \"<div class=\\\"dz-success\\\">\" +\n                        \"<div class=\\\"dz-success-mark\\\">\" +\n                            \"<svg viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\" +\n                                \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\" +\n                                    \"<path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" \" +\n                                        \"id=\\\"Oval-2\\\" \" +\n                                        \"stroke-opacity=\\\"0.198794158\\\" \" +\n                                        \"stroke=\\\"#747474\\\" \" +\n                                        \"fill-opacity=\\\"0.816519475\\\" \" +\n                                        \"fill=\\\"#FFFFFF\\\" \" +\n                                        \"sketch:type=\\\"MSShapeGroup\\\" \" +\n                                    \"></path>\" +\n                                \"</g>\" +\n                            \"</svg>\" +\n                        \"</div>\" +\n                    \"</div>\" +\n                \"</div>\"\n        }\n    };\n\n    // Compiled settings.\n    blueprint.prototype.options = false;\n\n    blueprint.prototype.hasCaptcha = function() {\n        return $(this.options.selector['captcha-row'], this.$widget).is(\":visible\");\n    };\n\n    blueprint.prototype.responsiveAnchor = function($elem) {\n        if (!ib.isMobile()) {\n            return false;\n        }\n\n        var widget  = this;\n        var $widget = this.$widget;\n        $elem = $($elem);\n\n        $widget.show()\n            .toggleClass('postbox-closed', false)\n            .toggleClass('postbox-maximized', false)\n            .toggleClass('postbox-minimized', false);\n\n\n        var top = $elem.position().top - $widget.outerHeight() - 10;\n\n        $widget.css({\n            'top' : top\n        });\n\n        return top;\n    };\n\n    blueprint.prototype.resizePostbox = function() {\n        var widget  = this;\n        var $widget = this.$widget;\n\n        if (widget.resizable)\n        {\n            if (ib.isMobile())\n            {\n                widget.unbindDraggable();\n                widget.unbindResize();\n            }\n            else\n            {\n                // Trigger resize on the post body.\n                // Forces the post box to obey new window constraints.\n                var $post    = $(widget.options.selector['form-body'], widget.$widget);\n                var uiWidget = $post.data('ui-resizable');\n\n                // Widget is bound and we have data\n                if (uiWidget && !jQuery.isEmptyObject(uiWidget.prevPosition))\n                {\n                    // This is copy+pasted from the source code because there is no polite way\n                    // to handle it otherwise.\n                    uiWidget._updatePrevProperties();\n                    uiWidget._trigger( \"resize\", event, uiWidget.ui() );\n                    uiWidget._applyChanges();\n                }\n            }\n        }\n        else if (!ib.isMobile())\n        {\n            var isClosed = $widget.hasClass(\"postbox-closed\");\n            var isMaximized = $widget.hasClass(\"postbox-maximized\");\n\n            if (!isMaximized && !isClosed)\n            {\n                widget.bindResize();\n            }\n\n            if (!isMaximized)\n            {\n                widget.bindDraggable();\n            }\n        }\n    };\n\n    // Gets the selection range of our post box.\n    blueprint.prototype.getBodySelection = function()\n    {\n        var el = $(this.options.selector['form-body'], this.$widget)[0];\n        var start = 0;\n        var end = 0;\n        var normalizedValue;\n        var range;\n        var textInputRange;\n        var len;\n        var endRange;\n\n        if (typeof el.selectionStart == \"number\" && typeof el.selectionEnd == \"number\") {\n            start = el.selectionStart;\n            end = el.selectionEnd;\n        }\n        else if (typeof document.selection !== \"undefined\") {\n            range = document.selection.createRange();\n\n            if (range && range.parentElement() == el) {\n                len = el.value.length;\n                normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n                // Create a working TextRange that lives only in the input\n                textInputRange = el.createTextRange();\n                textInputRange.moveToBookmark(range.getBookmark());\n\n                // Check if the start and end of the selection are at the very end\n                // of the input, since moveStart/moveEnd doesn't return what we want\n                // in those cases\n                endRange = el.createTextRange();\n                endRange.collapse(false);\n\n                if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    start = end = len;\n                }\n                else {\n                    start = -textInputRange.moveStart(\"character\", -len);\n                    start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                    if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        end = len;\n                    }\n                    else {\n                        end = -textInputRange.moveEnd(\"character\", -len);\n                        end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    // Replaces selected text with new text in our post box.\n    blueprint.prototype.replaceBodySelection = function(text)\n    {\n        var $textarea = $(this.options.selector['form-body'], this.$widget);\n        var textarea  = $textarea[0];\n        var selection = this.getBodySelection();\n\n        var value     = textarea.value;\n        var front     = value.substring(0, selection.start);\n        var back      = value.substring(selection.end, value.length);\n\n        $textarea.val(front + text + back);\n\n        strPos = selection.start + text.length;\n\n        if (typeof textarea.selectionStart == \"number\" && typeof textarea.selectionEnd == \"number\") {\n            textarea.selectionStart = strPos;\n            textarea.selectionEnd = strPos;\n            textarea.focus();\n        }\n        else if (typeof document.selection != \"undefined\") {\n            textarea.focus();\n            var range = document.selection.createRange();\n            range.moveStart('character', -textarea.value.length);\n            range.moveStart('character', strPos);\n            range.moveEnd('character', 0);\n            range.select();\n        }\n    }\n\n    // Events\n    blueprint.prototype.events = {\n        bodyChange    : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            if (widget.$counter && widget.$counter instanceof jQuery)\n            {\n                var $body = $(this);\n                var len   = $body.val().length;\n                var text  = \"<strong id=\\\"body-counter-curr\\\">\" + len + \"</strong>\";\n                var valid = true;\n                var free  = true;\n                var max   = parseInt(window.app.board_settings.postMaxLength, 10);\n                var min   = parseInt(window.app.board_settings.postMinLength, 10);\n\n                if (!isNaN(max))\n                {\n                    text  = text + \"<span id=\\\"body-counter-max\\\">\" + max + \"</span>\";\n                    free  = false;\n                    valid = valid && (len <= max);\n                }\n\n                if (!isNaN(min))\n                {\n                    text  = \"<span id=\\\"body-counter-min\\\">\" + min + \"</span>\" + text;\n                    free  = false;\n                    valid = valid && (len >= min);\n                }\n\n                if (!free)\n                {\n                    widget.$counter\n                        .toggleClass(\"counter-valid\",    valid)\n                        .toggleClass(\"counter-invalid\", !valid)\n                        .html(text);\n                }\n            }\n        },\n\n        captchaHide   : function(widget) {\n            var $widget = widget.$widget;\n\n            $(widget.options.selector['captcha-row'], $widget).hide();\n        },\n\n        captchaShow   : function(widget) {\n            var $widget = widget.$widget;\n\n            $(widget.options.selector['captcha-row'], $widget).show();\n        },\n\n        closeClick    : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            // Tweak classes.\n            $widget\n                .removeClass(\"postbox-maximized postbox-minimized\")\n                .addClass(\"postbox-closed\");\n\n            if (ib.isMobile()) {\n                $widget.hide();\n            }\n\n            // Unbind the jQuery UI resize.\n            widget.unbindResize();\n\n            // Prevents formClick from immediately firing.\n            event.stopPropagation();\n        },\n\n        fileUploading : function(event, file) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            ++widget.activeUploads;\n            console.log(widget.activeUploads + \" concurrent uploads.\");\n\n            $(widget.options.selector['submit-post'], $widget)\n                .prop('disabled', widget.activeUploads > 0);\n        },\n\n        fileCanceled  : function(event, file) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            --widget.activeUploads;\n            console.log(widget.activeUploads + \" concurrent uploads.\");\n\n            $(widget.options.selector['submit-post'], $widget)\n                .prop('disabled', widget.activeUploads > 0);\n        },\n\n        fileFailed    : function(event, file) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            --widget.activeUploads;\n            console.log(widget.activeUploads + \" concurrent uploads.\");\n\n            $(widget.options.selector['submit-post'], $widget)\n                .prop('disabled', widget.activeUploads > 0);\n        },\n\n        fileUploaded  : function(event, file) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            --widget.activeUploads;\n            console.log(widget.activeUploads + \" concurrent uploads.\");\n\n            $(widget.options.selector['submit-post'], $widget)\n                .prop('disabled', widget.activeUploads > 0);\n        },\n\n        formClear     : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            // Stops redundant loading of captcha when we don't need one.\n            if (widget.hasCaptcha())\n            {\n                $(widget.options.selector['captcha'], $widget).trigger('reload');\n            }\n\n            if (widget.dropzone)\n            {\n                widget.dropzone.removeAllFiles();\n            }\n\n            $(widget.options.selector['form-clear'], $widget)\n                .val(\"\")\n                .html(\"\");\n\n            $(widget.options.selector['form-body'], $widget)\n                .trigger('change')\n                .focus();\n\n            if (ib.isMobile()) {\n                $widget.css(\"display\", \"\");\n            }\n        },\n\n        formClick     : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            if ($widget.is(\".postbox-closed\"))\n            {\n                // Tweak classes.\n                $widget.removeClass(\"postbox-minimized postbox-closed postbox-maximized\");\n\n                // Rebind jQuery UI widgets.\n                widget.bindDraggable();\n                widget.bindResize();\n            }\n        },\n\n        formOpenClick : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            widget.responsiveAnchor(this);\n        },\n\n        formSubmit    : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            widget.notices.clear();\n\n            var $form       = $(this).add(\"<input name=\\\"messenger\\\" value=\\\"1\\\" />\");\n            var $updater    = $(widget.options.selector['autoupdater']);\n            var autoupdater = false;\n\n            // Note: serializeJSON is a plugin we use to convert form data into\n            // a multidimensional array for application/json posts.\n\n            if ($updater.length && $updater[0].widget)\n            {\n                var data = $form.serialize();\n\n                autoupdater = $updater[0].widget;\n                data = $form\n                    .add(\"<input name=\\\"updatesOnly\\\" value=\\\"1\\\" />\")\n                    .add(\"<input name=\\\"updateHtml\\\" value=\\\"1\\\" />\")\n                    .add(\"<input name=\\\"updatedSince\\\" value=\\\"\" + autoupdater.updateLast +\"\\\" />\")\n                    .serializeJSON();\n            }\n            else\n            {\n                var data = $form.serializeJSON();\n            }\n\n            // Indicate we want a full messenger response.\n            data.messenger = true;\n\n            // Temporarialy disable form and submit button to prevent double posting\n            $form.prop('disabled', true);\n            $(widget.options.selector['submit']).prop('disabled', true);\n\n            jQuery.ajax({\n                type:        \"POST\",\n                method:      \"PUT\",\n                url:         $form.attr('action') + \".json\",\n                data:        data,\n                dataType:    \"json\",\n                contentType: \"application/json; charset=utf-8\"\n            })\n                .done(function(response, textStatus, jqXHR) {\n                    $form.prop('disabled', false);\n                    $(widget.options.selector['submit']).prop('disabled', false);\n\n                    if (typeof response !== \"object\")\n                    {\n                        try\n                        {\n                            response = jQuery.parseJSON(response);\n                        }\n                        catch (exception)\n                        {\n                            console.log(\"Post submission returned unpredictable response. Refreshing.\");\n                            window.location.reload();\n                            return;\n                        }\n                    }\n\n                    // This event trigger will cascade effects with our supplemental Messenger information.\n                    if (response.messenger)\n                    {\n                        $(window).trigger('messenger', response);\n                        var json = response.data;\n                    }\n                    else\n                    {\n                        var json = response;\n                    }\n\n                    if (typeof json.redirect !== \"undefined\")\n                    {\n                        console.log(\"Post submitted. Redirecting.\");\n                        window.location = json.redirect;\n                    }\n                    else if (typeof json.errors !== \"undefined\")\n                    {\n                        console.log(\"Post rejected.\");\n\n                        jQuery.each(json.errors, function(field, errors)\n                        {\n                            jQuery.each(errors, function(index, error)\n                            {\n                                widget.notices.push(error, 'error');\n                            });\n                        });\n                    }\n                    else if (autoupdater !== false)\n                    {\n                        console.log(\"Post submitted. Inline updating.\");\n\n                        clearInterval(autoupdater.updateTimer);\n\n                        jqXHR.widget = autoupdater;\n                        autoupdater.updating    = true;\n                        autoupdater.updateTimer = false;\n                        autoupdater.updateAsked = parseInt(parseInt(Date.now(), 10) / 1000, 10);\n                        autoupdater.events.updateSuccess(json, textStatus, jqXHR, true);\n                        autoupdater.events.updateComplete(json, textStatus, jqXHR);\n\n                        widget.events.formClear(event);\n                    }\n                    else\n                    {\n                        console.log(\"Post submitted. No autoupdater. Refreshing.\");\n                        window.location.reload();\n                    }\n                });\n\n            event.preventDefault();\n            return false;\n        },\n\n        maximizeClick : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            // Tweak classes.\n            $widget\n                .removeClass(\"postbox-minimized postbox-closed\")\n                .addClass(\"postbox-maximized\");\n\n            // Remove jQuery UI widgets.\n            widget.unbindDraggable();\n            widget.unbindResize();\n        },\n\n        messenger     : function(event, messages) {\n            if (messages.messenger)\n            {\n                ib.getInstances('postbox').each(function()\n                {\n                    var widget  = this.widget;\n                    var $widget = widget.$widget;\n\n                    // Toggles captcha based on messenger information.\n                    if (messages.captcha)\n                    {\n                        widget.events.captchaShow(widget);\n                        $(widget.options.selector['captcha-row'], $widget)\n                            .trigger('load', messages.captcha);\n                    }\n                    else\n                    {\n                        widget.events.captchaHide(widget);\n                    }\n                });\n            }\n        },\n\n        minimizeClick : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            // Tweak classes.\n            $widget\n                .removeClass(\"postbox-maximized postbox-closed\")\n                .addClass(\"postbox-minimized\");\n\n            // Rebind jQuery UI Resize.\n            widget.bindDraggable();\n            widget.bindResize();\n        },\n\n        pageChange    : function(event) {\n            widget.options.checkFileUrl = window.app.board_url + \"check-file\";\n            widget.dropzone.options.url = window.app.board_url + \"upload-file\";\n            widget.dropzone.options.maxFilesize = window.app.settings.attachmentFilesize / 1024;\n        },\n\n        postDragStop  : function(event, ui) {\n            var widget  = this.widget;\n            var $widget = this.widget.$widget;\n\n            if (ib.ltr && widget.axis == \"sw\")\n            {\n                // Okay, so:\n                // Our styling using top,right.\n                // Draggable sets the position using top,left.\n                // This causes the box to expand to the right when dragging with the resize handles.\n                // Because you cannot drag to expand and drag to move at the same time, it's safe\n                // to fix the right/left assignent after the drag has stopped.\n                // This uses little jQuery as well which is just gravy.\n                var rect  = this.getBoundingClientRect();\n                var right = (document.body.clientWidth - rect.right);\n\n                if (rect.top <= 80 && right <= 40)\n                {\n                    right = 10;\n                    this.style.top = 45 + \"px\";\n                }\n\n                this.style.height = \"auto\";\n                this.style.left   = \"auto\";\n                this.style.right  = right + \"px\";\n            }\n        },\n\n        postKeyDown  : function(event) {\n            var widget  = event.data.widget;\n            var $widget = event.data.$widget;\n\n            // Captures CTRL+ENTER\n            if ((event.keyCode == 10 || event.keyCode == 13) && event.ctrlKey)\n            {\n                $(widget.options.selector['submit-post'], $widget)\n                    .trigger('click');\n\n                event.preventDefault();\n                return false;\n            }\n        },\n\n        postResize    : function(event, ui) {\n            var widget  = this.widget;\n            var $widget = this.widget.$widget;\n\n            var $post = $(this);\n\n            ui.position.top  = 0;\n            ui.position.left = 0;\n\n            var formHangY   = window.innerHeight - ($widget.position().top + widget.$widget.outerHeight());\n            ui.size.width   = Math.min(ui.size.width, $widget.width());\n            ui.size.height += Math.min(0, formHangY);\n\n            widget.$widget.css({\n                'height' : formHangY > 0 ? \"auto\" : window.innerHeight - $widget.position().top\n            });\n\n            $post.css('width', ui.size.width);\n            $post.children().first().css('width', \"100%\");\n\n            return ui;\n        },\n\n        postResizeStart : function(event, ui) {\n            var widget  = this.widget;\n            var $widget = this.widget.$widget;\n            var axis    = $(this).data('ui-resizable').axis;\n\n            if (widget.axis != axis)\n            {\n                var rect  = this.getBoundingClientRect();\n\n                if (widget.axis == \"sw\")\n                {\n                    $widget[0].style.left  = rect.left + \"px\";\n                    $widget[0].style.right = \"auto\";\n                }\n            }\n        },\n\n        postResizeStop  : function(event, ui) {\n            var widget  = this.widget;\n            var $widget = this.widget.$widget;\n            var axis    = $(this).data('ui-resizable').axis;\n\n            if (widget.axis != axis)\n            {\n                var rect  = this.getBoundingClientRect();\n\n                if (widget.axis == \"sw\")\n                {\n                    var right = (document.body.clientWidth - rect.right);\n\n                    $widget[0].style.left  = \"auto\";\n                    $widget[0].style.right = right + \"px\";\n                }\n            }\n        },\n\n        spoilerChange : function(event) {\n            var $this = $(this);\n            var $next = $this.next();\n\n            $this.next().attr('value', $this.prop('checked') ? 1 : 0);\n        },\n\n        windowResize  : function(event) {\n            // For some pathetic reason, the jQery UI Resize widget uses the \"resize\"\n            // event name, which is also an HTML default for window resizes. Events fired\n            // also bubble up to the window, so this gets called when the post box resizes too.\n            if (event.target === window)\n            {\n                event.data.widget.resizePostbox();\n            }\n        }\n    },\n\n    // Event bindings\n    blueprint.prototype.bind = function() {\n        var widget  = this;\n        var $widget = this.$widget;\n        var data    = {\n            widget  : widget,\n            $widget : $widget\n        };\n\n        $(widget.options.selector['password'], $widget)\n            .val(ib.settings.postbox.password.get());\n\n        // Force the notices widget to be bound, and then record it.\n        // We have to do this because the notices widget is a child within this widget.\n        // The parent is bound first.\n        widget.notices = window.ib.bindElement($(widget.options.selector['notices'])[0]);\n\n        if (typeof window.Dropzone !== 'undefined')\n        {\n            var dropzoneOptions = jQuery.extend({}, widget.options.dropzone);\n            dropzoneOptions.widget  = widget;\n            dropzoneOptions.$widget = $widget;\n\n            $(widget.options.selector['dropzone'], $widget)\n                .dropzone(dropzoneOptions);\n        }\n\n        $(window)\n            .on('messenger.ib-postbox.', data, widget.events.messenger)\n            .on('resize.ib-postbox',     data, widget.events.windowResize);\n\n        // This will actually bind multiple times so make sure it only happens once.\n        if (widget.initOnce !== true)\n        {\n            // Ensures window.app is current with dropzone stuff.\n            //InstantClick.on(\"change\", data, widget.events.pageChange);\n        }\n\n        $(document)\n            // Post form open buttons outside the form itself\n            .on(\n                'click.ib-postbox',\n                widget.options.selector['form-open'],\n                data,\n                widget.events.formOpenClick\n            );\n\n        $widget\n            // Watch for key downs as to capture ctrl+enter submission.\n            // We don't die this to any particular item.\n            .on(\n                'keydown.ib-postbox',\n                data,\n                widget.events.postKeyDown\n            )\n\n            // Watch for form size clicks\n            .on(\n                'click.ib-postbox',\n                data,\n                widget.events.formClick\n            )\n            .on(\n                'click.ib-postbox',\n                widget.options.selector['button-close'],\n                data,\n                widget.events.closeClick\n            )\n            .on(\n                'click.ib-postbox',\n                widget.options.selector['button-maximize'],\n                data,\n                widget.events.maximizeClick\n            )\n            .on(\n                'click.ib-postbox',\n                widget.options.selector['button-minimize'],\n                data,\n                widget.events.minimizeClick\n            )\n\n            // Watch field changes\n            .on(\n                'change.ib-postbox',\n                widget.options.selector['form-body'],\n                data,\n                widget.events.bodyChange\n            )\n            .on(\n                'keyup.ib-postbox',\n                widget.options.selector['form-body'],\n                data,\n                widget.events.bodyChange\n            )\n            .on(\n                'change.ib-postbox',\n                widget.options.selector['form-spoiler'],\n                data,\n                widget.events.spoilerChange\n            )\n\n            // Watch form submission.\n            .on(\n                'submit.ib-postbox',\n                data,\n                widget.events.formSubmit\n            )\n\n            // Watch for file statuses.\n            .on(\n                'fileFailed.ib-postbox',\n                data,\n                widget.events.fileFailed\n            )\n            .on(\n                'fileCanceled.ib-postbox',\n                data,\n                widget.events.fileCanceled\n            )\n            .on(\n                'fileUploaded.ib-postbox',\n                data,\n                widget.events.fileUploaded\n            )\n            .on(\n                'fileUploading.ib-postbox',\n                data,\n                widget.events.fileUploading\n            )\n        ;\n\n        // Insert our first cite if we load with #post-333 as hash.\n        var citeMatch = window.location.hash.match(/^#*reply-(\\d+)$/);\n        if (citeMatch !== null)\n        {\n            var $body = $(widget.options.selector['form-body']);\n            $body.val($body.val() + \">>\" + citeMatch[1] + \"\\n\");\n        }\n\n        widget.bindCounter();\n        widget.bindDraggable();\n        widget.bindResize();\n    };\n\n    blueprint.prototype.bindCounter = function() {\n        var widget   = this;\n        var $widget  = this.$widget;\n        var $body    = $(widget.options.selector['form-body'], widget.$widget);\n        var $counter = $(widget.options.template['counter']);\n\n        $counter.insertAfter($body);\n        widget.$counter = $counter;\n        $body.trigger('change');\n    };\n\n    blueprint.prototype.bindDraggable = function() {\n        var widget   = this;\n        var $widget  = this.$widget;\n\n        if (!ib.isMobile())\n        {\n            $widget.draggable({\n                containment : \"window\",\n                handle      : \"legend.form-legend\",\n                stop        : widget.events.postDragStop\n            });\n\n            widget.draggable = true;\n        }\n    };\n\n    blueprint.prototype.bindResize = function() {\n        var widget   = this;\n        var $widget  = this.$widget;\n\n        if (!ib.isMobile())\n        {\n            // Bind resizability onto the post area.\n            var $body   = $(widget.options.selector['form-body'], $widget);\n\n            if (!widget.resizable && $body.length && typeof $body.resizable === \"function\")\n            {\n                $body.resizable({\n                    handles:     \"sw,se\",\n                    resize:      widget.events.postResize,\n                    start:       widget.events.postResizeStart,\n                    stop:        widget.events.postResizeStop,\n                    alsoResize:  widget.$widget,\n                    minWidth:    300,\n                    minHeight:   26\n                });\n\n                // This gives the jQuery UI events a scope back to the widget.\n                var jWidget = $body.resizable(\"widget\")[0];\n                jWidget.widget  = widget;\n                jWidget.$widget = $widget;\n\n                $widget\n                    .resizable({\n                        handles:  null,\n                        minWidth: 300\n                    })\n                    .css({\n                        height: \"auto\"\n                    });\n\n                widget.resizable = true;\n            }\n        }\n    };\n\n    blueprint.prototype.unbindCounter = function() {\n        var widget   = this;\n\n        if (widget.$counter && widget.$counter instanceof jQuery)\n        {\n            widget.$counter.remove();\n        }\n    };\n\n    blueprint.prototype.unbindDraggable = function() {\n        var widget   = this;\n        var $widget  = this.$widget;\n\n        if (widget.draggable && typeof $widget.draggable === \"function\")\n        {\n            $widget.draggable( \"destroy\" ).attr('style', \"\");\n\n            widget.draggable = false;\n        }\n    };\n\n    blueprint.prototype.unbindResize = function() {\n        var widget   = this;\n        var $widget  = this.$widget;\n\n        // Bind resizability onto the post area.\n        var $body = $(widget.options.selector['form-body'], widget.$widget);\n\n        if (widget.resizable && $body.length && typeof $body.resizable === \"function\")\n        {\n            $body.resizable( \"destroy\" ).attr('style', \"\");\n\n            $widget.resizable( \"destroy\" ).attr('style', \"\");\n\n            widget.resizable = false;\n        }\n    };\n\n    ib.widget(\"postbox\", blueprint, options);\n    ib.settings.postbox.password.setInitial(false);\n\n    $(document).on('ready.ib-postbox', function(event) {\n        // Bit of a hack.\n        // Sets form values to our password by default even outside\n        // of the scope of a thread.\n        $(blueprint.prototype.defaults.selector['post-password'])\n            .val(ib.settings['postbox']['password'].get());\n    });\n})(window, window.jQuery);\n","// ===========================================================================\n// Purpose          : Custom Styling\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n\t// Widget blueprint\n\tvar blueprint = ib.getBlueprint();\n\t\n\t// Configuration options\n\tvar options = {\n\t\ttheme : {\n\t\t\tdefault : \"\",\n\t\t\ttype    : \"select\",\n\t\t\tvalues  : [\n\t\t\t\t\"\",\n\t\t\t\t\"next-yotsuba.css\",\n\t\t\t\t\"next-dark.css\",\n\t\t\t\t\"next-tomorrow.css\",\n\t\t\t\t\"kappa-burichan.css\",\n\t\t\t],\n\t\t\tonChange : function(event) {\n\t\t\t\tvar setting = event.data.setting.get();\n\t\t\t\tvar domObj  = document.getElementById('theme-stylesheet');\n\t\t\t\t\n\t\t\t\tif (setting)\n\t\t\t\t{\n\t\t\t\t\tdomObj.href = window.app.url + \"/static/css/skins/\" + setting;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdomObj.href = \"\";\n\t\t\t\t}\n\t\t\t},\n\t\t\tonUpdate : function(event) {\n\t\t\t\tvar setting = event.data.setting.get();\n\t\t\t\tvar domObj  = document.getElementById('theme-stylesheet');\n\t\t\t\t\n\t\t\t\tif (setting)\n\t\t\t\t{\n\t\t\t\t\tdomObj.href = window.app.url + \"/static/css/skins/\" + setting;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdomObj.href = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tcss : {\n\t\t\tdefault : \"\",\n\t\t\ttype    : \"textarea\",\n\t\t\tonChange : function(event) {\n\t\t\t\tvar setting = event.data.setting.get();\n\t\t\t\tvar domObj  = document.getElementById('user-css');\n\t\t\t\tdomObj.innerHTML = setting;\n\t\t\t},\n\t\t\tonUpdate : function(event) {\n\t\t\t\tvar setting = event.data.setting.get();\n\t\t\t\tvar domObj  = document.getElementById('user-css');\n\t\t\t\tdomObj.innerHTML = setting;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tib.widget(\"stylist\", blueprint, options);\n})(window, window.jQuery);\n","// ===========================================================================\n// Purpose          : Timestamp Configuration\n// Contributors     : jaw-sh\n// Widget Version   : 2\n// ===========================================================================\n\n(function(window, $, undefined) {\n\t// Widget blueprint\n\tvar blueprint = ib.getBlueprint();\n\t\n\t// Configuration options\n\tvar options = {\n\t\t// Date Format\n\t\tformat : {\n\t\t\ttype : \"select\",\n\t\t\tinitial : \"YYYY-MMM-DD HH:MM:SS\",\n\t\t\tvalues : [\n\t\t\t\t'YYYY-MMM-DD HH:MM:SS',\n\t\t\t\t'MM/DD/YY(DDD)HH:MM:SS'\n\t\t\t],\n\t\t\tonChange : function(event) {\n\t\t\t\t// On setting update, trigger reformating..\n\t\t\t\tvar setting = event.data.setting;\n\t\t\t\tvar widget  = setting.widget;\n\t\t\t\tib.getInstances(widget).trigger('reformat.ib-time');\n\t\t\t},\n\t\t\tonUpdate : function(event) {\n\t\t\t\t// On storage update, trigger reformating.\n\t\t\t\tvar setting = event.data.setting;\n\t\t\t\tvar widget  = setting.widget;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < ib.widgets[widget].instances.length; ++i)\n\t\t\t\t{\n\t\t\t\t\tvar instance = ib.widgets[widget].instances[i];\n\t\t\t\t\tinstance.$widget.trigger('reformat.ib-time');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Main Widget Initialization Binding\n\tblueprint.prototype.bind = function() {\n\t\tvar data = {\n\t\t\twidget  : this,\n\t\t\t$widget : this.$widget\n\t\t};\n\t\t\n\t\tthis.$widget\n\t\t\t.on('reformat.ib-time', data, this.events.timeReformat)\n\t\t\t.trigger('reformat.ib-time');\n\t};\n\t\n\t// Event hooks\n\tblueprint.prototype.events = {\n\t\t// Reformat timestamps on command.\n\t\ttimeReformat : function(event) {\n\t\t\t// Fetch our existing information.\n\t\t\tvar widget = event.data.widget;\n\t\t\tvar text   = event.data.$widget.text();\n\t\t\tvar time   = new Date(event.data.$widget.attr('datetime'));\n\t\t\t\n\t\t\tvar y = ib.lpad(time.getFullYear(), 2, \"0\");\n\t\t\tvar m = ib.lpad(time.getMonth() + 1, 2, \"0\");\n\t\t\tvar d = ib.lpad(time.getDate(), 2, \"0\");\n\t\t\tvar hour = ib.lpad(time.getHours(), 2, \"0\");\n\t\t\tvar min  = ib.lpad(time.getMinutes(), 2, \"0\");\n\t\t\tvar sec  = ib.lpad(time.getSeconds(), 2, \"0\");\n\t\t\t\n\t\t\tswitch (widget.get('format'))\n\t\t\t{\n\t\t\t\tcase 'YYYY-MMM-DD HH:MM:SS' :\n\t\t\t\t\t// Translate 0 into Dec\n\t\t\t\t\tm = ib.trans(\"time.calendar.abbrevmonths.\"+time.getMonth());\n\t\t\t\t\ttext = y+\"-\"+m+\"-\"+d+\" \"+hour+\":\"+min+\":\"+sec;\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'MM/DD/YY(DDD)HH:MM:SS' :\n\t\t\t\t\tvar dow = time.getDay();\n\t\t\t\t\tdow = ib.trans(\"time.calendar.abbrevdays.\" + dow);\n\t\t\t\t\t\n\t\t\t\t\ttext = m+\"/\"+d+\"/\"+y+\"(\"+dow+\")\"+hour+\":\"+min+\":\"+sec;\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tdefault :\n\t\t\t\t\tconsole.log(\"Invalid format \\\"\"+this.get('format')+\"\\\"\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tevent.data.$widget.text(text);\n\t\t}\n\t};\n\t\n\tib.widget(\"time\", blueprint, options);\n})(window, window.jQuery);\n"],"sourceRoot":"/source/"}